State 4 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: header code main
    2        | header main

    3 header: %empty

    4 main: KW_DEF KW_MAIN '(' ')' ':' code KW_ENDDEF ';'

    5 code: instr
    6     | code instr

    7 instr: ex_instr
    8      | break
    9      | decl
   10      | return
   11      | if
   12      | comp
   13      | loops
   14      | continue
   15      | empty
   16      | new_table_from_table
   17      | comments

   18 comments: TK_LINECOMMENTS

   19 ex_instr: ex ';'

   20 function: KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | KW_DEF TK_ID '(' ')' ':' KW_ENDDEF

   25 empty: ';'

   26 continue: KW_CONTINUE ';'

   27 $@1: %empty

   28 $@2: %empty

   29 comp: KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'

   30 loops: KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'

   33 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'

   35 return: KW_RETURN ';'
   36       | KW_RETURN ex ';'

   37 if: KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'

   39 break: KW_BREAK ';'

   40 function: TK_ID '(' ')'
   41         | TK_ID '(' exList ')'
   42         | '#' TK_ID '(' ')'
   43         | '#' TK_ID '(' exList ')'

   44 ex: TK_INT
   45   | '-' TK_INT
   46   | TK_REAL
   47   | '-' TK_REAL
   48   | KW_TRUE
   49   | KW_FALSE
   50   | TK_ID
   51   | '-' TK_ID
   52   | '#' TK_ID
   53   | '-' '#' TK_ID
   54   | '#' TK_ID '[' ex ']'
   55   | '#' TK_ID '[' ']'
   56   | TK_ID '[' ex ']'
   57   | TK_ID '[' ']'
   58   | TK_CONSTRING
   59   | ex '.' ex
   60   | ex '/' ex
   61   | ex '=' ex
   62   | ex '+' ex
   63   | ex '-' ex
   64   | ex '*' ex
   65   | ex '%' ex
   66   | ex '>' ex
   67   | ex '<' ex
   68   | ex KW_E ex
   69   | ex KW_AND ex
   70   | ex KW_OR ex
   71   | ex KW_NOT ex
   72   | ex KW_LESSE ex
   73   | ex KW_GREATERE ex
   74   | ex KW_NOTE ex
   75   | ex KW_P ex
   76   | KW_NOT ex
   77   | ex KW_PLUSE ex
   78   | ex KW_MINUSE ex
   79   | ex KW_DIVE ex
   80   | ex KW_MULTE ex
   81   | ex KW_MODE ex
   82   | ex KW_DE ex
   83   | '[' ex ']'
   84   | '(' ex ')'
   85   | function

   86 parameters: parameter
   87           | parameters ',' parameter

   88 parameter: TK_ID ':' types
   89          | TK_ID '[' TK_INT ']' ':' types
   90          | TK_ID '[' ']' ':' types

   91 decl: exList ':' types ';'
   92     | KW_CONST TK_ID '=' ex ':' types ';'

   93 exList: ex
   94       | exList ',' ex

   95 types: KW_INTEGER
   96      | KW_STR
   97      | KW_BOOLEAN
   98      | KW_SCALAR
   99      | TK_ID


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 42 43 52 53 54 55
    '%' (37) 65
    '(' (40) 4 20 21 22 23 24 32 37 38 40 41 42 43 84
    ')' (41) 4 20 21 22 23 24 32 37 38 40 41 42 43 84
    '*' (42) 64
    '+' (43) 62
    ',' (44) 87 94
    '-' (45) 20 22 45 47 51 53 63
    '.' (46) 59
    '/' (47) 60
    ':' (58) 4 20 21 22 23 24 29 30 31 32 33 34 37 38 88 89 90 91 92
    ';' (59) 4 19 25 26 29 30 31 32 33 34 35 36 37 38 39 91 92
    '<' (60) 67
    '=' (61) 61 92
    '>' (62) 20 22 66
    '[' (91) 30 31 33 34 54 55 56 57 83 89 90
    ']' (93) 30 31 33 34 54 55 56 57 83 89 90
    error (256)
    TK_ID <str> (258) 20 21 22 23 24 29 30 31 33 34 40 41 42 43 50 51 52 53 54 55 56 57 88 89 90 92 99
    TK_INT <str> (259) 30 31 33 34 44 45 89
    TK_REAL <str> (260) 46 47
    TK_CONSTRING <str> (261) 58
    TK_LINECOMMENTS <str> (262) 18
    KW_IF (263) 37 38
    KW_ELSE (264) 38
    KW_DEF (265) 4 20 21 22 23 24
    KW_MAIN (266) 4
    KW_ENDDEF (267) 4 20 21 22 23 24
    KW_INTEGER (268) 95
    KW_SCALAR (269) 98
    KW_STR (270) 96
    KW_BOOLEAN (271) 97
    KW_RETURN (272) 35 36
    KW_COMP (273) 29
    KW_ENDCOMP (274) 29
    KW_AND (275) 69
    KW_OR (276) 70
    KW_NOT (277) 71 76
    KW_LESSE (278) 72
    KW_GREATERE (279) 73
    KW_E (280) 68
    KW_TRUE (281) 48
    KW_FALSE (282) 49
    KW_NOTE (283) 74
    KW_PLUSE (284) 77
    KW_MINUSE (285) 78
    KW_MULTE (286) 80
    KW_DIVE (287) 79
    KW_MODE (288) 81
    KW_DE (289) 33 34 82
    KW_P (290) 75
    KW_ENDIF (291) 37 38
    KW_FOR (292) 30 31 33 34
    KW_ENDFOR (293) 30 31
    KW_IN (294) 30 31 34
    KW_WHILE (295) 32
    KW_ENDWHILE (296) 32
    KW_BREAK (297) 39
    KW_CONTINUE (298) 26
    KW_OF (299) 34
    KW_CONST (300) 92


Nonterminals, with rules where they appear

    $accept (63)
        on left: 0
    program (64)
        on left: 1 2
        on right: 0
    header <str> (65)
        on left: 3
        on right: 1 2
    main <str> (66)
        on left: 4
        on right: 1 2
    code <str> (67)
        on left: 5 6
        on right: 1 4 6 20 21 22 23 29 30 31 32 37 38
    instr <str> (68)
        on left: 7 8 9 10 11 12 13 14 15 16 17
        on right: 5 6
    comments <str> (69)
        on left: 18
        on right: 17
    ex_instr <str> (70)
        on left: 19
        on right: 7
    function <str> (71)
        on left: 20 21 22 23 24 40 41 42 43
        on right: 85
    empty <str> (72)
        on left: 25
        on right: 15
    continue <str> (73)
        on left: 26
        on right: 14
    comp <str> (74)
        on left: 29
        on right: 12
    $@1 (75)
        on left: 27
        on right: 29
    $@2 (76)
        on left: 28
        on right: 29
    loops <str> (77)
        on left: 30 31 32
        on right: 13
    new_table_from_table <str> (78)
        on left: 33 34
        on right: 16
    return <str> (79)
        on left: 35 36
        on right: 10
    if <str> (80)
        on left: 37 38
        on right: 11
    break <str> (81)
        on left: 39
        on right: 8
    ex <str> (82)
        on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
        on right: 19 30 31 32 33 34 36 37 38 54 56 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 92 93 94
    parameters <str> (83)
        on left: 86 87
        on right: 20 21 87
    parameter <str> (84)
        on left: 88 89 90
        on right: 86 87
    decl <str> (85)
        on left: 91 92
        on right: 9
    exList <str> (86)
        on left: 93 94
        on right: 41 43 91 94
    types <str> (87)
        on left: 95 96 97 98 99
        on right: 20 22 33 34 88 89 90 91 92


State 0

    0 $accept: . program $end
    1 program: . header code main
    2        | . header main
    3 header: . %empty

    $default  reduce using rule 3 (header)

    program  go to state 1
    header   go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: header . code main
    2        | header . main
    4 main: . KW_DEF KW_MAIN '(' ')' ':' code KW_ENDDEF ';'
    5 code: . instr
    6     | . code instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 10
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    main                  go to state 26
    code                  go to state 27
    instr                 go to state 28
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 3

    0 $accept: program $end .

    $default  accept


State 4

   33 new_table_from_table: TK_ID . KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | TK_ID . KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   40 function: TK_ID . '(' ')'
   41         | TK_ID . '(' exList ')'
   50 ex: TK_ID .  [KW_AND, KW_OR, KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_PLUSE, KW_MINUSE, KW_MULTE, KW_DIVE, KW_MODE, KW_DE, KW_P, '.', '+', '-', '*', '/', '%', '<', '>', '=', ':', ';', ',']
   56   | TK_ID . '[' ex ']'
   57   | TK_ID . '[' ']'

    KW_DE  shift, and go to state 43
    '['    shift, and go to state 44
    '('    shift, and go to state 45

    KW_DE     [reduce using rule 50 (ex)]
    $default  reduce using rule 50 (ex)


State 5

   44 ex: TK_INT .

    $default  reduce using rule 44 (ex)


State 6

   46 ex: TK_REAL .

    $default  reduce using rule 46 (ex)


State 7

   58 ex: TK_CONSTRING .

    $default  reduce using rule 58 (ex)


State 8

   18 comments: TK_LINECOMMENTS .

    $default  reduce using rule 18 (comments)


State 9

   37 if: KW_IF . '(' ex ')' ':' code KW_ENDIF ';'
   38   | KW_IF . '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'

    '('  shift, and go to state 46


State 10

    4 main: KW_DEF . KW_MAIN '(' ')' ':' code KW_ENDDEF ';'
   20 function: KW_DEF . TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | KW_DEF . TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | KW_DEF . TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | KW_DEF . TK_ID '(' ')' ':' code KW_ENDDEF
   24         | KW_DEF . TK_ID '(' ')' ':' KW_ENDDEF

    TK_ID    shift, and go to state 47
    KW_MAIN  shift, and go to state 48


State 11

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   35 return: KW_RETURN . ';'
   36       | KW_RETURN . ex ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    ';'           shift, and go to state 51
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 52


State 12

   29 comp: KW_COMP . TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'

    TK_ID  shift, and go to state 53


State 13

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   76   | KW_NOT . ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 54


State 14

   48 ex: KW_TRUE .

    $default  reduce using rule 48 (ex)


State 15

   49 ex: KW_FALSE .

    $default  reduce using rule 49 (ex)


State 16

   30 loops: KW_FOR . TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | KW_FOR . TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'

    TK_ID  shift, and go to state 55


State 17

   32 loops: KW_WHILE . '(' ex ')' ':' code KW_ENDWHILE ';'

    '('  shift, and go to state 56


State 18

   39 break: KW_BREAK . ';'

    ';'  shift, and go to state 57


State 19

   26 continue: KW_CONTINUE . ';'

    ';'  shift, and go to state 58


State 20

   92 decl: KW_CONST . TK_ID '=' ex ':' types ';'

    TK_ID  shift, and go to state 59


State 21

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   83   | '[' . ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 60


State 22

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   84   | '(' . ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 61


State 23

   45 ex: '-' . TK_INT
   47   | '-' . TK_REAL
   51   | '-' . TK_ID
   53   | '-' . '#' TK_ID

    TK_ID    shift, and go to state 62
    TK_INT   shift, and go to state 63
    TK_REAL  shift, and go to state 64
    '#'      shift, and go to state 65


State 24

   25 empty: ';' .

    $default  reduce using rule 25 (empty)


State 25

   42 function: '#' . TK_ID '(' ')'
   43         | '#' . TK_ID '(' exList ')'
   52 ex: '#' . TK_ID
   54   | '#' . TK_ID '[' ex ']'
   55   | '#' . TK_ID '[' ']'

    TK_ID  shift, and go to state 66


State 26

    2 program: header main .

    $default  reduce using rule 2 (program)


State 27

    1 program: header code . main
    4 main: . KW_DEF KW_MAIN '(' ')' ':' code KW_ENDDEF ';'
    6 code: code . instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 10
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    main                  go to state 67
    instr                 go to state 68
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 28

    5 code: instr .

    $default  reduce using rule 5 (code)


State 29

   17 instr: comments .

    $default  reduce using rule 17 (instr)


State 30

    7 instr: ex_instr .

    $default  reduce using rule 7 (instr)


State 31

   85 ex: function .

    $default  reduce using rule 85 (ex)


State 32

   15 instr: empty .

    $default  reduce using rule 15 (instr)


State 33

   14 instr: continue .

    $default  reduce using rule 14 (instr)


State 34

   12 instr: comp .

    $default  reduce using rule 12 (instr)


State 35

   13 instr: loops .

    $default  reduce using rule 13 (instr)


State 36

   16 instr: new_table_from_table .

    $default  reduce using rule 16 (instr)


State 37

   10 instr: return .

    $default  reduce using rule 10 (instr)


State 38

   11 instr: if .

    $default  reduce using rule 11 (instr)


State 39

    8 instr: break .

    $default  reduce using rule 8 (instr)


State 40

   19 ex_instr: ex . ';'
   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex
   93 exList: ex .  [':', ',']

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    '.'          shift, and go to state 83
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91
    ';'          shift, and go to state 92

    $default  reduce using rule 93 (exList)


State 41

    9 instr: decl .

    $default  reduce using rule 9 (instr)


State 42

   91 decl: exList . ':' types ';'
   94 exList: exList . ',' ex

    ':'  shift, and go to state 93
    ','  shift, and go to state 94


State 43

   33 new_table_from_table: TK_ID KW_DE . '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | TK_ID KW_DE . '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'

    '['  shift, and go to state 95


State 44

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   56   | TK_ID '[' . ex ']'
   57   | . TK_ID '[' ']'
   57   | TK_ID '[' . ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    ']'           shift, and go to state 96
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 97


State 45

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   40         | TK_ID '(' . ')'
   41         | . TK_ID '(' exList ')'
   41         | TK_ID '(' . exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ')'           shift, and go to state 98
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 99
    exList    go to state 100


State 46

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   37 if: KW_IF '(' . ex ')' ':' code KW_ENDIF ';'
   38   | KW_IF '(' . ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 101


State 47

   20 function: KW_DEF TK_ID . '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | KW_DEF TK_ID . '(' parameters ')' ':' code KW_ENDDEF
   22         | KW_DEF TK_ID . '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | KW_DEF TK_ID . '(' ')' ':' code KW_ENDDEF
   24         | KW_DEF TK_ID . '(' ')' ':' KW_ENDDEF

    '('  shift, and go to state 102


State 48

    4 main: KW_DEF KW_MAIN . '(' ')' ':' code KW_ENDDEF ';'

    '('  shift, and go to state 103


State 49

   40 function: TK_ID . '(' ')'
   41         | TK_ID . '(' exList ')'
   50 ex: TK_ID .  [KW_AND, KW_OR, KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_PLUSE, KW_MINUSE, KW_MULTE, KW_DIVE, KW_MODE, KW_DE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', '=', ':', ';', ',']
   56   | TK_ID . '[' ex ']'
   57   | TK_ID . '[' ']'

    '['  shift, and go to state 44
    '('  shift, and go to state 45

    $default  reduce using rule 50 (ex)


State 50

   20 function: KW_DEF . TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | KW_DEF . TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | KW_DEF . TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | KW_DEF . TK_ID '(' ')' ':' code KW_ENDDEF
   24         | KW_DEF . TK_ID '(' ')' ':' KW_ENDDEF

    TK_ID  shift, and go to state 47


State 51

   35 return: KW_RETURN ';' .

    $default  reduce using rule 35 (return)


State 52

   36 return: KW_RETURN ex . ';'
   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    '.'          shift, and go to state 83
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91
    ';'          shift, and go to state 104


State 53

   29 comp: KW_COMP TK_ID . ':' $@1 code $@2 KW_ENDCOMP ';'

    ':'  shift, and go to state 105


State 54

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   76   | KW_NOT ex .  [KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', ':', ';', ',']
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND     shift, and go to state 69
    KW_OR      shift, and go to state 70
    KW_PLUSE   shift, and go to state 76
    KW_MINUSE  shift, and go to state 77
    KW_MULTE   shift, and go to state 78
    KW_DIVE    shift, and go to state 79
    KW_MODE    shift, and go to state 80
    KW_DE      shift, and go to state 81
    '='        shift, and go to state 91

    $default  reduce using rule 76 (ex)

    Conflict between rule 76 and token KW_AND resolved as shift (KW_NOT < KW_AND).
    Conflict between rule 76 and token KW_OR resolved as shift (KW_NOT < KW_OR).
    Conflict between rule 76 and token KW_NOT resolved as reduce (%left KW_NOT).
    Conflict between rule 76 and token KW_LESSE resolved as reduce (KW_LESSE < KW_NOT).
    Conflict between rule 76 and token KW_GREATERE resolved as reduce (KW_GREATERE < KW_NOT).
    Conflict between rule 76 and token KW_E resolved as reduce (KW_E < KW_NOT).
    Conflict between rule 76 and token KW_NOTE resolved as reduce (KW_NOTE < KW_NOT).
    Conflict between rule 76 and token KW_PLUSE resolved as shift (KW_NOT < KW_PLUSE).
    Conflict between rule 76 and token KW_MINUSE resolved as shift (KW_NOT < KW_MINUSE).
    Conflict between rule 76 and token KW_MULTE resolved as shift (KW_NOT < KW_MULTE).
    Conflict between rule 76 and token KW_DIVE resolved as shift (KW_NOT < KW_DIVE).
    Conflict between rule 76 and token KW_MODE resolved as shift (KW_NOT < KW_MODE).
    Conflict between rule 76 and token KW_DE resolved as shift (KW_NOT < KW_DE).
    Conflict between rule 76 and token KW_P resolved as reduce (KW_P < KW_NOT).
    Conflict between rule 76 and token '.' resolved as reduce ('.' < KW_NOT).
    Conflict between rule 76 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 76 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 76 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 76 and token '/' resolved as reduce ('/' < KW_NOT).
    Conflict between rule 76 and token '%' resolved as reduce ('%' < KW_NOT).
    Conflict between rule 76 and token '<' resolved as reduce ('<' < KW_NOT).
    Conflict between rule 76 and token '>' resolved as reduce ('>' < KW_NOT).
    Conflict between rule 76 and token '=' resolved as shift (KW_NOT < '=').


State 55

   30 loops: KW_FOR TK_ID . KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | KW_FOR TK_ID . KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'

    KW_IN  shift, and go to state 106


State 56

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   32 loops: KW_WHILE '(' . ex ')' ':' code KW_ENDWHILE ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 107


State 57

   39 break: KW_BREAK ';' .

    $default  reduce using rule 39 (break)


State 58

   26 continue: KW_CONTINUE ';' .

    $default  reduce using rule 26 (continue)


State 59

   92 decl: KW_CONST TK_ID . '=' ex ':' types ';'

    '='  shift, and go to state 108


State 60

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex
   83   | '[' ex . ']'

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    ']'          shift, and go to state 109
    '.'          shift, and go to state 83
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91


State 61

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex
   84   | '(' ex . ')'

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    '.'          shift, and go to state 83
    ')'          shift, and go to state 110
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91


State 62

   51 ex: '-' TK_ID .

    $default  reduce using rule 51 (ex)


State 63

   45 ex: '-' TK_INT .

    $default  reduce using rule 45 (ex)


State 64

   47 ex: '-' TK_REAL .

    $default  reduce using rule 47 (ex)


State 65

   53 ex: '-' '#' . TK_ID

    TK_ID  shift, and go to state 111


State 66

   42 function: '#' TK_ID . '(' ')'
   43         | '#' TK_ID . '(' exList ')'
   52 ex: '#' TK_ID .  [KW_AND, KW_OR, KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_PLUSE, KW_MINUSE, KW_MULTE, KW_DIVE, KW_MODE, KW_DE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', '=', ':', ';', ',']
   54   | '#' TK_ID . '[' ex ']'
   55   | '#' TK_ID . '[' ']'

    '['  shift, and go to state 112
    '('  shift, and go to state 113

    $default  reduce using rule 52 (ex)


State 67

    1 program: header code main .

    $default  reduce using rule 1 (program)


State 68

    6 code: code instr .

    $default  reduce using rule 6 (code)


State 69

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   69   | ex KW_AND . ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 114


State 70

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   70   | ex KW_OR . ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 115


State 71

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   71   | ex KW_NOT . ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 116


State 72

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   72   | ex KW_LESSE . ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 117


State 73

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   73   | ex KW_GREATERE . ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 118


State 74

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   68   | ex KW_E . ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 119


State 75

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   74   | ex KW_NOTE . ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 120


State 76

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   77   | ex KW_PLUSE . ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 121


State 77

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   78   | ex KW_MINUSE . ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 122


State 78

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   80   | ex KW_MULTE . ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 123


State 79

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   79   | ex KW_DIVE . ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 124


State 80

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   81   | ex KW_MODE . ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 125


State 81

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   82   | ex KW_DE . ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 126


State 82

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   75   | ex KW_P . ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 127


State 83

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   59   | ex '.' . ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 128


State 84

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   62   | ex '+' . ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 129


State 85

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   63   | ex '-' . ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 130


State 86

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   64   | ex '*' . ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 131


State 87

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   60   | ex '/' . ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 132


State 88

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   65   | ex '%' . ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 133


State 89

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   67   | ex '<' . ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 134


State 90

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   66   | ex '>' . ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 135


State 91

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   61   | ex '=' . ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 136


State 92

   19 ex_instr: ex ';' .

    $default  reduce using rule 19 (ex_instr)


State 93

   91 decl: exList ':' . types ';'
   95 types: . KW_INTEGER
   96      | . KW_STR
   97      | . KW_BOOLEAN
   98      | . KW_SCALAR
   99      | . TK_ID

    TK_ID       shift, and go to state 137
    KW_INTEGER  shift, and go to state 138
    KW_SCALAR   shift, and go to state 139
    KW_STR      shift, and go to state 140
    KW_BOOLEAN  shift, and go to state 141

    types  go to state 142


State 94

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   94 exList: exList ',' . ex

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 143


State 95

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   33 new_table_from_table: TK_ID KW_DE '[' . ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | TK_ID KW_DE '[' . ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 144


State 96

   57 ex: TK_ID '[' ']' .

    $default  reduce using rule 57 (ex)


State 97

   56 ex: TK_ID '[' ex . ']'
   59   | ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    ']'          shift, and go to state 145
    '.'          shift, and go to state 83
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91


State 98

   40 function: TK_ID '(' ')' .

    $default  reduce using rule 40 (function)


State 99

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex
   93 exList: ex .  [')', ',']

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    '.'          shift, and go to state 83
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91

    $default  reduce using rule 93 (exList)


State 100

   41 function: TK_ID '(' exList . ')'
   94 exList: exList . ',' ex

    ')'  shift, and go to state 146
    ','  shift, and go to state 94


State 101

   37 if: KW_IF '(' ex . ')' ':' code KW_ENDIF ';'
   38   | KW_IF '(' ex . ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    '.'          shift, and go to state 83
    ')'          shift, and go to state 147
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91


State 102

   20 function: KW_DEF TK_ID '(' . parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | KW_DEF TK_ID '(' . parameters ')' ':' code KW_ENDDEF
   22         | KW_DEF TK_ID '(' . ')' '-' '>' types ':' code KW_ENDDEF
   23         | KW_DEF TK_ID '(' . ')' ':' code KW_ENDDEF
   24         | KW_DEF TK_ID '(' . ')' ':' KW_ENDDEF
   86 parameters: . parameter
   87           | . parameters ',' parameter
   88 parameter: . TK_ID ':' types
   89          | . TK_ID '[' TK_INT ']' ':' types
   90          | . TK_ID '[' ']' ':' types

    TK_ID  shift, and go to state 148
    ')'    shift, and go to state 149

    parameters  go to state 150
    parameter   go to state 151


State 103

    4 main: KW_DEF KW_MAIN '(' . ')' ':' code KW_ENDDEF ';'

    ')'  shift, and go to state 152


State 104

   36 return: KW_RETURN ex ';' .

    $default  reduce using rule 36 (return)


State 105

   27 $@1: . %empty
   29 comp: KW_COMP TK_ID ':' . $@1 code $@2 KW_ENDCOMP ';'

    $default  reduce using rule 27 ($@1)

    $@1  go to state 153


State 106

   30 loops: KW_FOR TK_ID KW_IN . '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | KW_FOR TK_ID KW_IN . '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'

    '['  shift, and go to state 154


State 107

   32 loops: KW_WHILE '(' ex . ')' ':' code KW_ENDWHILE ';'
   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    '.'          shift, and go to state 83
    ')'          shift, and go to state 155
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91


State 108

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   92 decl: KW_CONST TK_ID '=' . ex ':' types ';'

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 156


State 109

   83 ex: '[' ex ']' .

    $default  reduce using rule 83 (ex)


State 110

   84 ex: '(' ex ')' .

    $default  reduce using rule 84 (ex)


State 111

   53 ex: '-' '#' TK_ID .

    $default  reduce using rule 53 (ex)


State 112

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   54   | '#' TK_ID '[' . ex ']'
   55   | . '#' TK_ID '[' ']'
   55   | '#' TK_ID '[' . ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    ']'           shift, and go to state 157
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 158


State 113

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   40         | . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   42         | '#' TK_ID '(' . ')'
   43         | . '#' TK_ID '(' exList ')'
   43         | '#' TK_ID '(' . exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ')'           shift, and go to state 159
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 99
    exList    go to state 160


State 114

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   69   | ex KW_AND ex .  [KW_AND, KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', ':', ';', ',']
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_OR      shift, and go to state 70
    KW_PLUSE   shift, and go to state 76
    KW_MINUSE  shift, and go to state 77
    KW_MULTE   shift, and go to state 78
    KW_DIVE    shift, and go to state 79
    KW_MODE    shift, and go to state 80
    KW_DE      shift, and go to state 81
    '='        shift, and go to state 91

    $default  reduce using rule 69 (ex)

    Conflict between rule 69 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 69 and token KW_OR resolved as shift (KW_AND < KW_OR).
    Conflict between rule 69 and token KW_NOT resolved as reduce (KW_NOT < KW_AND).
    Conflict between rule 69 and token KW_LESSE resolved as reduce (KW_LESSE < KW_AND).
    Conflict between rule 69 and token KW_GREATERE resolved as reduce (KW_GREATERE < KW_AND).
    Conflict between rule 69 and token KW_E resolved as reduce (KW_E < KW_AND).
    Conflict between rule 69 and token KW_NOTE resolved as reduce (KW_NOTE < KW_AND).
    Conflict between rule 69 and token KW_PLUSE resolved as shift (KW_AND < KW_PLUSE).
    Conflict between rule 69 and token KW_MINUSE resolved as shift (KW_AND < KW_MINUSE).
    Conflict between rule 69 and token KW_MULTE resolved as shift (KW_AND < KW_MULTE).
    Conflict between rule 69 and token KW_DIVE resolved as shift (KW_AND < KW_DIVE).
    Conflict between rule 69 and token KW_MODE resolved as shift (KW_AND < KW_MODE).
    Conflict between rule 69 and token KW_DE resolved as shift (KW_AND < KW_DE).
    Conflict between rule 69 and token KW_P resolved as reduce (KW_P < KW_AND).
    Conflict between rule 69 and token '.' resolved as reduce ('.' < KW_AND).
    Conflict between rule 69 and token '+' resolved as reduce ('+' < KW_AND).
    Conflict between rule 69 and token '-' resolved as reduce ('-' < KW_AND).
    Conflict between rule 69 and token '*' resolved as reduce ('*' < KW_AND).
    Conflict between rule 69 and token '/' resolved as reduce ('/' < KW_AND).
    Conflict between rule 69 and token '%' resolved as reduce ('%' < KW_AND).
    Conflict between rule 69 and token '<' resolved as reduce ('<' < KW_AND).
    Conflict between rule 69 and token '>' resolved as reduce ('>' < KW_AND).
    Conflict between rule 69 and token '=' resolved as shift (KW_AND < '=').


State 115

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   70   | ex KW_OR ex .  [KW_AND, KW_OR, KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', ':', ';', ',']
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_PLUSE   shift, and go to state 76
    KW_MINUSE  shift, and go to state 77
    KW_MULTE   shift, and go to state 78
    KW_DIVE    shift, and go to state 79
    KW_MODE    shift, and go to state 80
    KW_DE      shift, and go to state 81
    '='        shift, and go to state 91

    $default  reduce using rule 70 (ex)

    Conflict between rule 70 and token KW_AND resolved as reduce (KW_AND < KW_OR).
    Conflict between rule 70 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 70 and token KW_NOT resolved as reduce (KW_NOT < KW_OR).
    Conflict between rule 70 and token KW_LESSE resolved as reduce (KW_LESSE < KW_OR).
    Conflict between rule 70 and token KW_GREATERE resolved as reduce (KW_GREATERE < KW_OR).
    Conflict between rule 70 and token KW_E resolved as reduce (KW_E < KW_OR).
    Conflict between rule 70 and token KW_NOTE resolved as reduce (KW_NOTE < KW_OR).
    Conflict between rule 70 and token KW_PLUSE resolved as shift (KW_OR < KW_PLUSE).
    Conflict between rule 70 and token KW_MINUSE resolved as shift (KW_OR < KW_MINUSE).
    Conflict between rule 70 and token KW_MULTE resolved as shift (KW_OR < KW_MULTE).
    Conflict between rule 70 and token KW_DIVE resolved as shift (KW_OR < KW_DIVE).
    Conflict between rule 70 and token KW_MODE resolved as shift (KW_OR < KW_MODE).
    Conflict between rule 70 and token KW_DE resolved as shift (KW_OR < KW_DE).
    Conflict between rule 70 and token KW_P resolved as reduce (KW_P < KW_OR).
    Conflict between rule 70 and token '.' resolved as reduce ('.' < KW_OR).
    Conflict between rule 70 and token '+' resolved as reduce ('+' < KW_OR).
    Conflict between rule 70 and token '-' resolved as reduce ('-' < KW_OR).
    Conflict between rule 70 and token '*' resolved as reduce ('*' < KW_OR).
    Conflict between rule 70 and token '/' resolved as reduce ('/' < KW_OR).
    Conflict between rule 70 and token '%' resolved as reduce ('%' < KW_OR).
    Conflict between rule 70 and token '<' resolved as reduce ('<' < KW_OR).
    Conflict between rule 70 and token '>' resolved as reduce ('>' < KW_OR).
    Conflict between rule 70 and token '=' resolved as shift (KW_OR < '=').


State 116

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   71   | ex KW_NOT ex .  [KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', ':', ';', ',']
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND     shift, and go to state 69
    KW_OR      shift, and go to state 70
    KW_PLUSE   shift, and go to state 76
    KW_MINUSE  shift, and go to state 77
    KW_MULTE   shift, and go to state 78
    KW_DIVE    shift, and go to state 79
    KW_MODE    shift, and go to state 80
    KW_DE      shift, and go to state 81
    '='        shift, and go to state 91

    $default  reduce using rule 71 (ex)

    Conflict between rule 71 and token KW_AND resolved as shift (KW_NOT < KW_AND).
    Conflict between rule 71 and token KW_OR resolved as shift (KW_NOT < KW_OR).
    Conflict between rule 71 and token KW_NOT resolved as reduce (%left KW_NOT).
    Conflict between rule 71 and token KW_LESSE resolved as reduce (KW_LESSE < KW_NOT).
    Conflict between rule 71 and token KW_GREATERE resolved as reduce (KW_GREATERE < KW_NOT).
    Conflict between rule 71 and token KW_E resolved as reduce (KW_E < KW_NOT).
    Conflict between rule 71 and token KW_NOTE resolved as reduce (KW_NOTE < KW_NOT).
    Conflict between rule 71 and token KW_PLUSE resolved as shift (KW_NOT < KW_PLUSE).
    Conflict between rule 71 and token KW_MINUSE resolved as shift (KW_NOT < KW_MINUSE).
    Conflict between rule 71 and token KW_MULTE resolved as shift (KW_NOT < KW_MULTE).
    Conflict between rule 71 and token KW_DIVE resolved as shift (KW_NOT < KW_DIVE).
    Conflict between rule 71 and token KW_MODE resolved as shift (KW_NOT < KW_MODE).
    Conflict between rule 71 and token KW_DE resolved as shift (KW_NOT < KW_DE).
    Conflict between rule 71 and token KW_P resolved as reduce (KW_P < KW_NOT).
    Conflict between rule 71 and token '.' resolved as reduce ('.' < KW_NOT).
    Conflict between rule 71 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 71 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 71 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 71 and token '/' resolved as reduce ('/' < KW_NOT).
    Conflict between rule 71 and token '%' resolved as reduce ('%' < KW_NOT).
    Conflict between rule 71 and token '<' resolved as reduce ('<' < KW_NOT).
    Conflict between rule 71 and token '>' resolved as reduce ('>' < KW_NOT).
    Conflict between rule 71 and token '=' resolved as shift (KW_NOT < '=').


State 117

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   72   | ex KW_LESSE ex .  [KW_LESSE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', ':', ';', ',']
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    '>'          shift, and go to state 90
    '='          shift, and go to state 91

    $default  reduce using rule 72 (ex)

    Conflict between rule 72 and token KW_AND resolved as shift (KW_LESSE < KW_AND).
    Conflict between rule 72 and token KW_OR resolved as shift (KW_LESSE < KW_OR).
    Conflict between rule 72 and token KW_NOT resolved as shift (KW_LESSE < KW_NOT).
    Conflict between rule 72 and token KW_LESSE resolved as reduce (%left KW_LESSE).
    Conflict between rule 72 and token KW_GREATERE resolved as shift (KW_LESSE < KW_GREATERE).
    Conflict between rule 72 and token KW_E resolved as shift (KW_LESSE < KW_E).
    Conflict between rule 72 and token KW_NOTE resolved as shift (KW_LESSE < KW_NOTE).
    Conflict between rule 72 and token KW_PLUSE resolved as shift (KW_LESSE < KW_PLUSE).
    Conflict between rule 72 and token KW_MINUSE resolved as shift (KW_LESSE < KW_MINUSE).
    Conflict between rule 72 and token KW_MULTE resolved as shift (KW_LESSE < KW_MULTE).
    Conflict between rule 72 and token KW_DIVE resolved as shift (KW_LESSE < KW_DIVE).
    Conflict between rule 72 and token KW_MODE resolved as shift (KW_LESSE < KW_MODE).
    Conflict between rule 72 and token KW_DE resolved as shift (KW_LESSE < KW_DE).
    Conflict between rule 72 and token KW_P resolved as reduce (KW_P < KW_LESSE).
    Conflict between rule 72 and token '.' resolved as reduce ('.' < KW_LESSE).
    Conflict between rule 72 and token '+' resolved as reduce ('+' < KW_LESSE).
    Conflict between rule 72 and token '-' resolved as reduce ('-' < KW_LESSE).
    Conflict between rule 72 and token '*' resolved as reduce ('*' < KW_LESSE).
    Conflict between rule 72 and token '/' resolved as reduce ('/' < KW_LESSE).
    Conflict between rule 72 and token '%' resolved as reduce ('%' < KW_LESSE).
    Conflict between rule 72 and token '<' resolved as reduce (%left '<').
    Conflict between rule 72 and token '>' resolved as shift (KW_LESSE < '>').
    Conflict between rule 72 and token '=' resolved as shift (KW_LESSE < '=').


State 118

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   73   | ex KW_GREATERE ex .  [KW_LESSE, KW_GREATERE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', ':', ';', ',']
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND     shift, and go to state 69
    KW_OR      shift, and go to state 70
    KW_NOT     shift, and go to state 71
    KW_E       shift, and go to state 74
    KW_NOTE    shift, and go to state 75
    KW_PLUSE   shift, and go to state 76
    KW_MINUSE  shift, and go to state 77
    KW_MULTE   shift, and go to state 78
    KW_DIVE    shift, and go to state 79
    KW_MODE    shift, and go to state 80
    KW_DE      shift, and go to state 81
    '='        shift, and go to state 91

    $default  reduce using rule 73 (ex)

    Conflict between rule 73 and token KW_AND resolved as shift (KW_GREATERE < KW_AND).
    Conflict between rule 73 and token KW_OR resolved as shift (KW_GREATERE < KW_OR).
    Conflict between rule 73 and token KW_NOT resolved as shift (KW_GREATERE < KW_NOT).
    Conflict between rule 73 and token KW_LESSE resolved as reduce (KW_LESSE < KW_GREATERE).
    Conflict between rule 73 and token KW_GREATERE resolved as reduce (%left KW_GREATERE).
    Conflict between rule 73 and token KW_E resolved as shift (KW_GREATERE < KW_E).
    Conflict between rule 73 and token KW_NOTE resolved as shift (KW_GREATERE < KW_NOTE).
    Conflict between rule 73 and token KW_PLUSE resolved as shift (KW_GREATERE < KW_PLUSE).
    Conflict between rule 73 and token KW_MINUSE resolved as shift (KW_GREATERE < KW_MINUSE).
    Conflict between rule 73 and token KW_MULTE resolved as shift (KW_GREATERE < KW_MULTE).
    Conflict between rule 73 and token KW_DIVE resolved as shift (KW_GREATERE < KW_DIVE).
    Conflict between rule 73 and token KW_MODE resolved as shift (KW_GREATERE < KW_MODE).
    Conflict between rule 73 and token KW_DE resolved as shift (KW_GREATERE < KW_DE).
    Conflict between rule 73 and token KW_P resolved as reduce (KW_P < KW_GREATERE).
    Conflict between rule 73 and token '.' resolved as reduce ('.' < KW_GREATERE).
    Conflict between rule 73 and token '+' resolved as reduce ('+' < KW_GREATERE).
    Conflict between rule 73 and token '-' resolved as reduce ('-' < KW_GREATERE).
    Conflict between rule 73 and token '*' resolved as reduce ('*' < KW_GREATERE).
    Conflict between rule 73 and token '/' resolved as reduce ('/' < KW_GREATERE).
    Conflict between rule 73 and token '%' resolved as reduce ('%' < KW_GREATERE).
    Conflict between rule 73 and token '<' resolved as reduce ('<' < KW_GREATERE).
    Conflict between rule 73 and token '>' resolved as reduce (%left '>').
    Conflict between rule 73 and token '=' resolved as shift (KW_GREATERE < '=').


State 119

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   68   | ex KW_E ex .  [KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', ':', ';', ',']
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND     shift, and go to state 69
    KW_OR      shift, and go to state 70
    KW_NOT     shift, and go to state 71
    KW_PLUSE   shift, and go to state 76
    KW_MINUSE  shift, and go to state 77
    KW_MULTE   shift, and go to state 78
    KW_DIVE    shift, and go to state 79
    KW_MODE    shift, and go to state 80
    KW_DE      shift, and go to state 81
    '='        shift, and go to state 91

    $default  reduce using rule 68 (ex)

    Conflict between rule 68 and token KW_AND resolved as shift (KW_E < KW_AND).
    Conflict between rule 68 and token KW_OR resolved as shift (KW_E < KW_OR).
    Conflict between rule 68 and token KW_NOT resolved as shift (KW_E < KW_NOT).
    Conflict between rule 68 and token KW_LESSE resolved as reduce (KW_LESSE < KW_E).
    Conflict between rule 68 and token KW_GREATERE resolved as reduce (KW_GREATERE < KW_E).
    Conflict between rule 68 and token KW_E resolved as reduce (%left KW_E).
    Conflict between rule 68 and token KW_NOTE resolved as reduce (%left KW_NOTE).
    Conflict between rule 68 and token KW_PLUSE resolved as shift (KW_E < KW_PLUSE).
    Conflict between rule 68 and token KW_MINUSE resolved as shift (KW_E < KW_MINUSE).
    Conflict between rule 68 and token KW_MULTE resolved as shift (KW_E < KW_MULTE).
    Conflict between rule 68 and token KW_DIVE resolved as shift (KW_E < KW_DIVE).
    Conflict between rule 68 and token KW_MODE resolved as shift (KW_E < KW_MODE).
    Conflict between rule 68 and token KW_DE resolved as shift (KW_E < KW_DE).
    Conflict between rule 68 and token KW_P resolved as reduce (KW_P < KW_E).
    Conflict between rule 68 and token '.' resolved as reduce ('.' < KW_E).
    Conflict between rule 68 and token '+' resolved as reduce ('+' < KW_E).
    Conflict between rule 68 and token '-' resolved as reduce ('-' < KW_E).
    Conflict between rule 68 and token '*' resolved as reduce ('*' < KW_E).
    Conflict between rule 68 and token '/' resolved as reduce ('/' < KW_E).
    Conflict between rule 68 and token '%' resolved as reduce ('%' < KW_E).
    Conflict between rule 68 and token '<' resolved as reduce ('<' < KW_E).
    Conflict between rule 68 and token '>' resolved as reduce ('>' < KW_E).
    Conflict between rule 68 and token '=' resolved as shift (KW_E < '=').


State 120

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   74   | ex KW_NOTE ex .  [KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', ':', ';', ',']
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND     shift, and go to state 69
    KW_OR      shift, and go to state 70
    KW_NOT     shift, and go to state 71
    KW_PLUSE   shift, and go to state 76
    KW_MINUSE  shift, and go to state 77
    KW_MULTE   shift, and go to state 78
    KW_DIVE    shift, and go to state 79
    KW_MODE    shift, and go to state 80
    KW_DE      shift, and go to state 81
    '='        shift, and go to state 91

    $default  reduce using rule 74 (ex)

    Conflict between rule 74 and token KW_AND resolved as shift (KW_NOTE < KW_AND).
    Conflict between rule 74 and token KW_OR resolved as shift (KW_NOTE < KW_OR).
    Conflict between rule 74 and token KW_NOT resolved as shift (KW_NOTE < KW_NOT).
    Conflict between rule 74 and token KW_LESSE resolved as reduce (KW_LESSE < KW_NOTE).
    Conflict between rule 74 and token KW_GREATERE resolved as reduce (KW_GREATERE < KW_NOTE).
    Conflict between rule 74 and token KW_E resolved as reduce (%left KW_E).
    Conflict between rule 74 and token KW_NOTE resolved as reduce (%left KW_NOTE).
    Conflict between rule 74 and token KW_PLUSE resolved as shift (KW_NOTE < KW_PLUSE).
    Conflict between rule 74 and token KW_MINUSE resolved as shift (KW_NOTE < KW_MINUSE).
    Conflict between rule 74 and token KW_MULTE resolved as shift (KW_NOTE < KW_MULTE).
    Conflict between rule 74 and token KW_DIVE resolved as shift (KW_NOTE < KW_DIVE).
    Conflict between rule 74 and token KW_MODE resolved as shift (KW_NOTE < KW_MODE).
    Conflict between rule 74 and token KW_DE resolved as shift (KW_NOTE < KW_DE).
    Conflict between rule 74 and token KW_P resolved as reduce (KW_P < KW_NOTE).
    Conflict between rule 74 and token '.' resolved as reduce ('.' < KW_NOTE).
    Conflict between rule 74 and token '+' resolved as reduce ('+' < KW_NOTE).
    Conflict between rule 74 and token '-' resolved as reduce ('-' < KW_NOTE).
    Conflict between rule 74 and token '*' resolved as reduce ('*' < KW_NOTE).
    Conflict between rule 74 and token '/' resolved as reduce ('/' < KW_NOTE).
    Conflict between rule 74 and token '%' resolved as reduce ('%' < KW_NOTE).
    Conflict between rule 74 and token '<' resolved as reduce ('<' < KW_NOTE).
    Conflict between rule 74 and token '>' resolved as reduce ('>' < KW_NOTE).
    Conflict between rule 74 and token '=' resolved as shift (KW_NOTE < '=').


State 121

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   77   | ex KW_PLUSE ex .  [KW_AND, KW_OR, KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_PLUSE, KW_MINUSE, KW_MULTE, KW_DIVE, KW_MODE, KW_DE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', '=', ':', ';', ',']
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    $default  reduce using rule 77 (ex)

    Conflict between rule 77 and token KW_AND resolved as reduce (KW_AND < KW_PLUSE).
    Conflict between rule 77 and token KW_OR resolved as reduce (KW_OR < KW_PLUSE).
    Conflict between rule 77 and token KW_NOT resolved as reduce (KW_NOT < KW_PLUSE).
    Conflict between rule 77 and token KW_LESSE resolved as reduce (KW_LESSE < KW_PLUSE).
    Conflict between rule 77 and token KW_GREATERE resolved as reduce (KW_GREATERE < KW_PLUSE).
    Conflict between rule 77 and token KW_E resolved as reduce (KW_E < KW_PLUSE).
    Conflict between rule 77 and token KW_NOTE resolved as reduce (KW_NOTE < KW_PLUSE).
    Conflict between rule 77 and token KW_PLUSE resolved as reduce (%left KW_PLUSE).
    Conflict between rule 77 and token KW_MINUSE resolved as reduce (%left KW_MINUSE).
    Conflict between rule 77 and token KW_MULTE resolved as reduce (%left KW_MULTE).
    Conflict between rule 77 and token KW_DIVE resolved as reduce (%left KW_DIVE).
    Conflict between rule 77 and token KW_MODE resolved as reduce (%left KW_MODE).
    Conflict between rule 77 and token KW_DE resolved as reduce (%left KW_DE).
    Conflict between rule 77 and token KW_P resolved as reduce (KW_P < KW_PLUSE).
    Conflict between rule 77 and token '.' resolved as reduce ('.' < KW_PLUSE).
    Conflict between rule 77 and token '+' resolved as reduce ('+' < KW_PLUSE).
    Conflict between rule 77 and token '-' resolved as reduce ('-' < KW_PLUSE).
    Conflict between rule 77 and token '*' resolved as reduce ('*' < KW_PLUSE).
    Conflict between rule 77 and token '/' resolved as reduce ('/' < KW_PLUSE).
    Conflict between rule 77 and token '%' resolved as reduce ('%' < KW_PLUSE).
    Conflict between rule 77 and token '<' resolved as reduce ('<' < KW_PLUSE).
    Conflict between rule 77 and token '>' resolved as reduce ('>' < KW_PLUSE).
    Conflict between rule 77 and token '=' resolved as reduce ('=' < KW_PLUSE).


State 122

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   78   | ex KW_MINUSE ex .  [KW_AND, KW_OR, KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_PLUSE, KW_MINUSE, KW_MULTE, KW_DIVE, KW_MODE, KW_DE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', '=', ':', ';', ',']
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    $default  reduce using rule 78 (ex)

    Conflict between rule 78 and token KW_AND resolved as reduce (KW_AND < KW_MINUSE).
    Conflict between rule 78 and token KW_OR resolved as reduce (KW_OR < KW_MINUSE).
    Conflict between rule 78 and token KW_NOT resolved as reduce (KW_NOT < KW_MINUSE).
    Conflict between rule 78 and token KW_LESSE resolved as reduce (KW_LESSE < KW_MINUSE).
    Conflict between rule 78 and token KW_GREATERE resolved as reduce (KW_GREATERE < KW_MINUSE).
    Conflict between rule 78 and token KW_E resolved as reduce (KW_E < KW_MINUSE).
    Conflict between rule 78 and token KW_NOTE resolved as reduce (KW_NOTE < KW_MINUSE).
    Conflict between rule 78 and token KW_PLUSE resolved as reduce (%left KW_PLUSE).
    Conflict between rule 78 and token KW_MINUSE resolved as reduce (%left KW_MINUSE).
    Conflict between rule 78 and token KW_MULTE resolved as reduce (%left KW_MULTE).
    Conflict between rule 78 and token KW_DIVE resolved as reduce (%left KW_DIVE).
    Conflict between rule 78 and token KW_MODE resolved as reduce (%left KW_MODE).
    Conflict between rule 78 and token KW_DE resolved as reduce (%left KW_DE).
    Conflict between rule 78 and token KW_P resolved as reduce (KW_P < KW_MINUSE).
    Conflict between rule 78 and token '.' resolved as reduce ('.' < KW_MINUSE).
    Conflict between rule 78 and token '+' resolved as reduce ('+' < KW_MINUSE).
    Conflict between rule 78 and token '-' resolved as reduce ('-' < KW_MINUSE).
    Conflict between rule 78 and token '*' resolved as reduce ('*' < KW_MINUSE).
    Conflict between rule 78 and token '/' resolved as reduce ('/' < KW_MINUSE).
    Conflict between rule 78 and token '%' resolved as reduce ('%' < KW_MINUSE).
    Conflict between rule 78 and token '<' resolved as reduce ('<' < KW_MINUSE).
    Conflict between rule 78 and token '>' resolved as reduce ('>' < KW_MINUSE).
    Conflict between rule 78 and token '=' resolved as reduce ('=' < KW_MINUSE).


State 123

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   80   | ex KW_MULTE ex .  [KW_AND, KW_OR, KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_PLUSE, KW_MINUSE, KW_MULTE, KW_DIVE, KW_MODE, KW_DE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', '=', ':', ';', ',']
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    $default  reduce using rule 80 (ex)

    Conflict between rule 80 and token KW_AND resolved as reduce (KW_AND < KW_MULTE).
    Conflict between rule 80 and token KW_OR resolved as reduce (KW_OR < KW_MULTE).
    Conflict between rule 80 and token KW_NOT resolved as reduce (KW_NOT < KW_MULTE).
    Conflict between rule 80 and token KW_LESSE resolved as reduce (KW_LESSE < KW_MULTE).
    Conflict between rule 80 and token KW_GREATERE resolved as reduce (KW_GREATERE < KW_MULTE).
    Conflict between rule 80 and token KW_E resolved as reduce (KW_E < KW_MULTE).
    Conflict between rule 80 and token KW_NOTE resolved as reduce (KW_NOTE < KW_MULTE).
    Conflict between rule 80 and token KW_PLUSE resolved as reduce (%left KW_PLUSE).
    Conflict between rule 80 and token KW_MINUSE resolved as reduce (%left KW_MINUSE).
    Conflict between rule 80 and token KW_MULTE resolved as reduce (%left KW_MULTE).
    Conflict between rule 80 and token KW_DIVE resolved as reduce (%left KW_DIVE).
    Conflict between rule 80 and token KW_MODE resolved as reduce (%left KW_MODE).
    Conflict between rule 80 and token KW_DE resolved as reduce (%left KW_DE).
    Conflict between rule 80 and token KW_P resolved as reduce (KW_P < KW_MULTE).
    Conflict between rule 80 and token '.' resolved as reduce ('.' < KW_MULTE).
    Conflict between rule 80 and token '+' resolved as reduce ('+' < KW_MULTE).
    Conflict between rule 80 and token '-' resolved as reduce ('-' < KW_MULTE).
    Conflict between rule 80 and token '*' resolved as reduce ('*' < KW_MULTE).
    Conflict between rule 80 and token '/' resolved as reduce ('/' < KW_MULTE).
    Conflict between rule 80 and token '%' resolved as reduce ('%' < KW_MULTE).
    Conflict between rule 80 and token '<' resolved as reduce ('<' < KW_MULTE).
    Conflict between rule 80 and token '>' resolved as reduce ('>' < KW_MULTE).
    Conflict between rule 80 and token '=' resolved as reduce ('=' < KW_MULTE).


State 124

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   79   | ex KW_DIVE ex .  [KW_AND, KW_OR, KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_PLUSE, KW_MINUSE, KW_MULTE, KW_DIVE, KW_MODE, KW_DE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', '=', ':', ';', ',']
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    $default  reduce using rule 79 (ex)

    Conflict between rule 79 and token KW_AND resolved as reduce (KW_AND < KW_DIVE).
    Conflict between rule 79 and token KW_OR resolved as reduce (KW_OR < KW_DIVE).
    Conflict between rule 79 and token KW_NOT resolved as reduce (KW_NOT < KW_DIVE).
    Conflict between rule 79 and token KW_LESSE resolved as reduce (KW_LESSE < KW_DIVE).
    Conflict between rule 79 and token KW_GREATERE resolved as reduce (KW_GREATERE < KW_DIVE).
    Conflict between rule 79 and token KW_E resolved as reduce (KW_E < KW_DIVE).
    Conflict between rule 79 and token KW_NOTE resolved as reduce (KW_NOTE < KW_DIVE).
    Conflict between rule 79 and token KW_PLUSE resolved as reduce (%left KW_PLUSE).
    Conflict between rule 79 and token KW_MINUSE resolved as reduce (%left KW_MINUSE).
    Conflict between rule 79 and token KW_MULTE resolved as reduce (%left KW_MULTE).
    Conflict between rule 79 and token KW_DIVE resolved as reduce (%left KW_DIVE).
    Conflict between rule 79 and token KW_MODE resolved as reduce (%left KW_MODE).
    Conflict between rule 79 and token KW_DE resolved as reduce (%left KW_DE).
    Conflict between rule 79 and token KW_P resolved as reduce (KW_P < KW_DIVE).
    Conflict between rule 79 and token '.' resolved as reduce ('.' < KW_DIVE).
    Conflict between rule 79 and token '+' resolved as reduce ('+' < KW_DIVE).
    Conflict between rule 79 and token '-' resolved as reduce ('-' < KW_DIVE).
    Conflict between rule 79 and token '*' resolved as reduce ('*' < KW_DIVE).
    Conflict between rule 79 and token '/' resolved as reduce ('/' < KW_DIVE).
    Conflict between rule 79 and token '%' resolved as reduce ('%' < KW_DIVE).
    Conflict between rule 79 and token '<' resolved as reduce ('<' < KW_DIVE).
    Conflict between rule 79 and token '>' resolved as reduce ('>' < KW_DIVE).
    Conflict between rule 79 and token '=' resolved as reduce ('=' < KW_DIVE).


State 125

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   81   | ex KW_MODE ex .  [KW_AND, KW_OR, KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_PLUSE, KW_MINUSE, KW_MULTE, KW_DIVE, KW_MODE, KW_DE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', '=', ':', ';', ',']
   82   | ex . KW_DE ex

    $default  reduce using rule 81 (ex)

    Conflict between rule 81 and token KW_AND resolved as reduce (KW_AND < KW_MODE).
    Conflict between rule 81 and token KW_OR resolved as reduce (KW_OR < KW_MODE).
    Conflict between rule 81 and token KW_NOT resolved as reduce (KW_NOT < KW_MODE).
    Conflict between rule 81 and token KW_LESSE resolved as reduce (KW_LESSE < KW_MODE).
    Conflict between rule 81 and token KW_GREATERE resolved as reduce (KW_GREATERE < KW_MODE).
    Conflict between rule 81 and token KW_E resolved as reduce (KW_E < KW_MODE).
    Conflict between rule 81 and token KW_NOTE resolved as reduce (KW_NOTE < KW_MODE).
    Conflict between rule 81 and token KW_PLUSE resolved as reduce (%left KW_PLUSE).
    Conflict between rule 81 and token KW_MINUSE resolved as reduce (%left KW_MINUSE).
    Conflict between rule 81 and token KW_MULTE resolved as reduce (%left KW_MULTE).
    Conflict between rule 81 and token KW_DIVE resolved as reduce (%left KW_DIVE).
    Conflict between rule 81 and token KW_MODE resolved as reduce (%left KW_MODE).
    Conflict between rule 81 and token KW_DE resolved as reduce (%left KW_DE).
    Conflict between rule 81 and token KW_P resolved as reduce (KW_P < KW_MODE).
    Conflict between rule 81 and token '.' resolved as reduce ('.' < KW_MODE).
    Conflict between rule 81 and token '+' resolved as reduce ('+' < KW_MODE).
    Conflict between rule 81 and token '-' resolved as reduce ('-' < KW_MODE).
    Conflict between rule 81 and token '*' resolved as reduce ('*' < KW_MODE).
    Conflict between rule 81 and token '/' resolved as reduce ('/' < KW_MODE).
    Conflict between rule 81 and token '%' resolved as reduce ('%' < KW_MODE).
    Conflict between rule 81 and token '<' resolved as reduce ('<' < KW_MODE).
    Conflict between rule 81 and token '>' resolved as reduce ('>' < KW_MODE).
    Conflict between rule 81 and token '=' resolved as reduce ('=' < KW_MODE).


State 126

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex
   82   | ex KW_DE ex .  [KW_AND, KW_OR, KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_PLUSE, KW_MINUSE, KW_MULTE, KW_DIVE, KW_MODE, KW_DE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', '=', ':', ';', ',']

    $default  reduce using rule 82 (ex)

    Conflict between rule 82 and token KW_AND resolved as reduce (KW_AND < KW_DE).
    Conflict between rule 82 and token KW_OR resolved as reduce (KW_OR < KW_DE).
    Conflict between rule 82 and token KW_NOT resolved as reduce (KW_NOT < KW_DE).
    Conflict between rule 82 and token KW_LESSE resolved as reduce (KW_LESSE < KW_DE).
    Conflict between rule 82 and token KW_GREATERE resolved as reduce (KW_GREATERE < KW_DE).
    Conflict between rule 82 and token KW_E resolved as reduce (KW_E < KW_DE).
    Conflict between rule 82 and token KW_NOTE resolved as reduce (KW_NOTE < KW_DE).
    Conflict between rule 82 and token KW_PLUSE resolved as reduce (%left KW_PLUSE).
    Conflict between rule 82 and token KW_MINUSE resolved as reduce (%left KW_MINUSE).
    Conflict between rule 82 and token KW_MULTE resolved as reduce (%left KW_MULTE).
    Conflict between rule 82 and token KW_DIVE resolved as reduce (%left KW_DIVE).
    Conflict between rule 82 and token KW_MODE resolved as reduce (%left KW_MODE).
    Conflict between rule 82 and token KW_DE resolved as reduce (%left KW_DE).
    Conflict between rule 82 and token KW_P resolved as reduce (KW_P < KW_DE).
    Conflict between rule 82 and token '.' resolved as reduce ('.' < KW_DE).
    Conflict between rule 82 and token '+' resolved as reduce ('+' < KW_DE).
    Conflict between rule 82 and token '-' resolved as reduce ('-' < KW_DE).
    Conflict between rule 82 and token '*' resolved as reduce ('*' < KW_DE).
    Conflict between rule 82 and token '/' resolved as reduce ('/' < KW_DE).
    Conflict between rule 82 and token '%' resolved as reduce ('%' < KW_DE).
    Conflict between rule 82 and token '<' resolved as reduce ('<' < KW_DE).
    Conflict between rule 82 and token '>' resolved as reduce ('>' < KW_DE).
    Conflict between rule 82 and token '=' resolved as reduce ('=' < KW_DE).


State 127

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   75   | ex KW_P ex .  [KW_P, KW_FOR, ']', '.', ')', '+', '-', ':', ';', ',']
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91

    $default  reduce using rule 75 (ex)

    Conflict between rule 75 and token KW_AND resolved as shift (KW_P < KW_AND).
    Conflict between rule 75 and token KW_OR resolved as shift (KW_P < KW_OR).
    Conflict between rule 75 and token KW_NOT resolved as shift (KW_P < KW_NOT).
    Conflict between rule 75 and token KW_LESSE resolved as shift (KW_P < KW_LESSE).
    Conflict between rule 75 and token KW_GREATERE resolved as shift (KW_P < KW_GREATERE).
    Conflict between rule 75 and token KW_E resolved as shift (KW_P < KW_E).
    Conflict between rule 75 and token KW_NOTE resolved as shift (KW_P < KW_NOTE).
    Conflict between rule 75 and token KW_PLUSE resolved as shift (KW_P < KW_PLUSE).
    Conflict between rule 75 and token KW_MINUSE resolved as shift (KW_P < KW_MINUSE).
    Conflict between rule 75 and token KW_MULTE resolved as shift (KW_P < KW_MULTE).
    Conflict between rule 75 and token KW_DIVE resolved as shift (KW_P < KW_DIVE).
    Conflict between rule 75 and token KW_MODE resolved as shift (KW_P < KW_MODE).
    Conflict between rule 75 and token KW_DE resolved as shift (KW_P < KW_DE).
    Conflict between rule 75 and token KW_P resolved as reduce (%left KW_P).
    Conflict between rule 75 and token '.' resolved as reduce ('.' < KW_P).
    Conflict between rule 75 and token '+' resolved as reduce (%left '+').
    Conflict between rule 75 and token '-' resolved as reduce (%left '-').
    Conflict between rule 75 and token '*' resolved as shift (KW_P < '*').
    Conflict between rule 75 and token '/' resolved as shift (KW_P < '/').
    Conflict between rule 75 and token '%' resolved as shift (KW_P < '%').
    Conflict between rule 75 and token '<' resolved as shift (KW_P < '<').
    Conflict between rule 75 and token '>' resolved as shift (KW_P < '>').
    Conflict between rule 75 and token '=' resolved as shift (KW_P < '=').


State 128

   59 ex: ex . '.' ex
   59   | ex '.' ex .  [KW_FOR, ']', '.', ')', ':', ';', ',']
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91

    $default  reduce using rule 59 (ex)

    Conflict between rule 59 and token KW_AND resolved as shift ('.' < KW_AND).
    Conflict between rule 59 and token KW_OR resolved as shift ('.' < KW_OR).
    Conflict between rule 59 and token KW_NOT resolved as shift ('.' < KW_NOT).
    Conflict between rule 59 and token KW_LESSE resolved as shift ('.' < KW_LESSE).
    Conflict between rule 59 and token KW_GREATERE resolved as shift ('.' < KW_GREATERE).
    Conflict between rule 59 and token KW_E resolved as shift ('.' < KW_E).
    Conflict between rule 59 and token KW_NOTE resolved as shift ('.' < KW_NOTE).
    Conflict between rule 59 and token KW_PLUSE resolved as shift ('.' < KW_PLUSE).
    Conflict between rule 59 and token KW_MINUSE resolved as shift ('.' < KW_MINUSE).
    Conflict between rule 59 and token KW_MULTE resolved as shift ('.' < KW_MULTE).
    Conflict between rule 59 and token KW_DIVE resolved as shift ('.' < KW_DIVE).
    Conflict between rule 59 and token KW_MODE resolved as shift ('.' < KW_MODE).
    Conflict between rule 59 and token KW_DE resolved as shift ('.' < KW_DE).
    Conflict between rule 59 and token KW_P resolved as shift ('.' < KW_P).
    Conflict between rule 59 and token '.' resolved as reduce (%left '.').
    Conflict between rule 59 and token '+' resolved as shift ('.' < '+').
    Conflict between rule 59 and token '-' resolved as shift ('.' < '-').
    Conflict between rule 59 and token '*' resolved as shift ('.' < '*').
    Conflict between rule 59 and token '/' resolved as shift ('.' < '/').
    Conflict between rule 59 and token '%' resolved as shift ('.' < '%').
    Conflict between rule 59 and token '<' resolved as shift ('.' < '<').
    Conflict between rule 59 and token '>' resolved as shift ('.' < '>').
    Conflict between rule 59 and token '=' resolved as shift ('.' < '=').


State 129

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   62   | ex '+' ex .  [KW_P, KW_FOR, ']', '.', ')', '+', '-', ':', ';', ',']
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91

    $default  reduce using rule 62 (ex)

    Conflict between rule 62 and token KW_AND resolved as shift ('+' < KW_AND).
    Conflict between rule 62 and token KW_OR resolved as shift ('+' < KW_OR).
    Conflict between rule 62 and token KW_NOT resolved as shift ('+' < KW_NOT).
    Conflict between rule 62 and token KW_LESSE resolved as shift ('+' < KW_LESSE).
    Conflict between rule 62 and token KW_GREATERE resolved as shift ('+' < KW_GREATERE).
    Conflict between rule 62 and token KW_E resolved as shift ('+' < KW_E).
    Conflict between rule 62 and token KW_NOTE resolved as shift ('+' < KW_NOTE).
    Conflict between rule 62 and token KW_PLUSE resolved as shift ('+' < KW_PLUSE).
    Conflict between rule 62 and token KW_MINUSE resolved as shift ('+' < KW_MINUSE).
    Conflict between rule 62 and token KW_MULTE resolved as shift ('+' < KW_MULTE).
    Conflict between rule 62 and token KW_DIVE resolved as shift ('+' < KW_DIVE).
    Conflict between rule 62 and token KW_MODE resolved as shift ('+' < KW_MODE).
    Conflict between rule 62 and token KW_DE resolved as shift ('+' < KW_DE).
    Conflict between rule 62 and token KW_P resolved as reduce (%left KW_P).
    Conflict between rule 62 and token '.' resolved as reduce ('.' < '+').
    Conflict between rule 62 and token '+' resolved as reduce (%left '+').
    Conflict between rule 62 and token '-' resolved as reduce (%left '-').
    Conflict between rule 62 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 62 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 62 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 62 and token '<' resolved as shift ('+' < '<').
    Conflict between rule 62 and token '>' resolved as shift ('+' < '>').
    Conflict between rule 62 and token '=' resolved as shift ('+' < '=').


State 130

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   63   | ex '-' ex .  [KW_P, KW_FOR, ']', '.', ')', '+', '-', ':', ';', ',']
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91

    $default  reduce using rule 63 (ex)

    Conflict between rule 63 and token KW_AND resolved as shift ('-' < KW_AND).
    Conflict between rule 63 and token KW_OR resolved as shift ('-' < KW_OR).
    Conflict between rule 63 and token KW_NOT resolved as shift ('-' < KW_NOT).
    Conflict between rule 63 and token KW_LESSE resolved as shift ('-' < KW_LESSE).
    Conflict between rule 63 and token KW_GREATERE resolved as shift ('-' < KW_GREATERE).
    Conflict between rule 63 and token KW_E resolved as shift ('-' < KW_E).
    Conflict between rule 63 and token KW_NOTE resolved as shift ('-' < KW_NOTE).
    Conflict between rule 63 and token KW_PLUSE resolved as shift ('-' < KW_PLUSE).
    Conflict between rule 63 and token KW_MINUSE resolved as shift ('-' < KW_MINUSE).
    Conflict between rule 63 and token KW_MULTE resolved as shift ('-' < KW_MULTE).
    Conflict between rule 63 and token KW_DIVE resolved as shift ('-' < KW_DIVE).
    Conflict between rule 63 and token KW_MODE resolved as shift ('-' < KW_MODE).
    Conflict between rule 63 and token KW_DE resolved as shift ('-' < KW_DE).
    Conflict between rule 63 and token KW_P resolved as reduce (%left KW_P).
    Conflict between rule 63 and token '.' resolved as reduce ('.' < '-').
    Conflict between rule 63 and token '+' resolved as reduce (%left '+').
    Conflict between rule 63 and token '-' resolved as reduce (%left '-').
    Conflict between rule 63 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 63 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 63 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 63 and token '<' resolved as shift ('-' < '<').
    Conflict between rule 63 and token '>' resolved as shift ('-' < '>').
    Conflict between rule 63 and token '=' resolved as shift ('-' < '=').


State 131

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   64   | ex '*' ex .  [KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', ':', ';', ',']
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91

    $default  reduce using rule 64 (ex)

    Conflict between rule 64 and token KW_AND resolved as shift ('*' < KW_AND).
    Conflict between rule 64 and token KW_OR resolved as shift ('*' < KW_OR).
    Conflict between rule 64 and token KW_NOT resolved as shift ('*' < KW_NOT).
    Conflict between rule 64 and token KW_LESSE resolved as shift ('*' < KW_LESSE).
    Conflict between rule 64 and token KW_GREATERE resolved as shift ('*' < KW_GREATERE).
    Conflict between rule 64 and token KW_E resolved as shift ('*' < KW_E).
    Conflict between rule 64 and token KW_NOTE resolved as shift ('*' < KW_NOTE).
    Conflict between rule 64 and token KW_PLUSE resolved as shift ('*' < KW_PLUSE).
    Conflict between rule 64 and token KW_MINUSE resolved as shift ('*' < KW_MINUSE).
    Conflict between rule 64 and token KW_MULTE resolved as shift ('*' < KW_MULTE).
    Conflict between rule 64 and token KW_DIVE resolved as shift ('*' < KW_DIVE).
    Conflict between rule 64 and token KW_MODE resolved as shift ('*' < KW_MODE).
    Conflict between rule 64 and token KW_DE resolved as shift ('*' < KW_DE).
    Conflict between rule 64 and token KW_P resolved as reduce (KW_P < '*').
    Conflict between rule 64 and token '.' resolved as reduce ('.' < '*').
    Conflict between rule 64 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 64 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 64 and token '*' resolved as reduce (%left '*').
    Conflict between rule 64 and token '/' resolved as reduce (%left '/').
    Conflict between rule 64 and token '%' resolved as reduce (%left '%').
    Conflict between rule 64 and token '<' resolved as shift ('*' < '<').
    Conflict between rule 64 and token '>' resolved as shift ('*' < '>').
    Conflict between rule 64 and token '=' resolved as shift ('*' < '=').


State 132

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   60   | ex '/' ex .  [KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', ':', ';', ',']
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91

    $default  reduce using rule 60 (ex)

    Conflict between rule 60 and token KW_AND resolved as shift ('/' < KW_AND).
    Conflict between rule 60 and token KW_OR resolved as shift ('/' < KW_OR).
    Conflict between rule 60 and token KW_NOT resolved as shift ('/' < KW_NOT).
    Conflict between rule 60 and token KW_LESSE resolved as shift ('/' < KW_LESSE).
    Conflict between rule 60 and token KW_GREATERE resolved as shift ('/' < KW_GREATERE).
    Conflict between rule 60 and token KW_E resolved as shift ('/' < KW_E).
    Conflict between rule 60 and token KW_NOTE resolved as shift ('/' < KW_NOTE).
    Conflict between rule 60 and token KW_PLUSE resolved as shift ('/' < KW_PLUSE).
    Conflict between rule 60 and token KW_MINUSE resolved as shift ('/' < KW_MINUSE).
    Conflict between rule 60 and token KW_MULTE resolved as shift ('/' < KW_MULTE).
    Conflict between rule 60 and token KW_DIVE resolved as shift ('/' < KW_DIVE).
    Conflict between rule 60 and token KW_MODE resolved as shift ('/' < KW_MODE).
    Conflict between rule 60 and token KW_DE resolved as shift ('/' < KW_DE).
    Conflict between rule 60 and token KW_P resolved as reduce (KW_P < '/').
    Conflict between rule 60 and token '.' resolved as reduce ('.' < '/').
    Conflict between rule 60 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 60 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 60 and token '*' resolved as reduce (%left '*').
    Conflict between rule 60 and token '/' resolved as reduce (%left '/').
    Conflict between rule 60 and token '%' resolved as reduce (%left '%').
    Conflict between rule 60 and token '<' resolved as shift ('/' < '<').
    Conflict between rule 60 and token '>' resolved as shift ('/' < '>').
    Conflict between rule 60 and token '=' resolved as shift ('/' < '=').


State 133

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   65   | ex '%' ex .  [KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', ':', ';', ',']
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91

    $default  reduce using rule 65 (ex)

    Conflict between rule 65 and token KW_AND resolved as shift ('%' < KW_AND).
    Conflict between rule 65 and token KW_OR resolved as shift ('%' < KW_OR).
    Conflict between rule 65 and token KW_NOT resolved as shift ('%' < KW_NOT).
    Conflict between rule 65 and token KW_LESSE resolved as shift ('%' < KW_LESSE).
    Conflict between rule 65 and token KW_GREATERE resolved as shift ('%' < KW_GREATERE).
    Conflict between rule 65 and token KW_E resolved as shift ('%' < KW_E).
    Conflict between rule 65 and token KW_NOTE resolved as shift ('%' < KW_NOTE).
    Conflict between rule 65 and token KW_PLUSE resolved as shift ('%' < KW_PLUSE).
    Conflict between rule 65 and token KW_MINUSE resolved as shift ('%' < KW_MINUSE).
    Conflict between rule 65 and token KW_MULTE resolved as shift ('%' < KW_MULTE).
    Conflict between rule 65 and token KW_DIVE resolved as shift ('%' < KW_DIVE).
    Conflict between rule 65 and token KW_MODE resolved as shift ('%' < KW_MODE).
    Conflict between rule 65 and token KW_DE resolved as shift ('%' < KW_DE).
    Conflict between rule 65 and token KW_P resolved as reduce (KW_P < '%').
    Conflict between rule 65 and token '.' resolved as reduce ('.' < '%').
    Conflict between rule 65 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 65 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 65 and token '*' resolved as reduce (%left '*').
    Conflict between rule 65 and token '/' resolved as reduce (%left '/').
    Conflict between rule 65 and token '%' resolved as reduce (%left '%').
    Conflict between rule 65 and token '<' resolved as shift ('%' < '<').
    Conflict between rule 65 and token '>' resolved as shift ('%' < '>').
    Conflict between rule 65 and token '=' resolved as shift ('%' < '=').


State 134

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   67   | ex '<' ex .  [KW_LESSE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', ':', ';', ',']
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    '>'          shift, and go to state 90
    '='          shift, and go to state 91

    $default  reduce using rule 67 (ex)

    Conflict between rule 67 and token KW_AND resolved as shift ('<' < KW_AND).
    Conflict between rule 67 and token KW_OR resolved as shift ('<' < KW_OR).
    Conflict between rule 67 and token KW_NOT resolved as shift ('<' < KW_NOT).
    Conflict between rule 67 and token KW_LESSE resolved as reduce (%left KW_LESSE).
    Conflict between rule 67 and token KW_GREATERE resolved as shift ('<' < KW_GREATERE).
    Conflict between rule 67 and token KW_E resolved as shift ('<' < KW_E).
    Conflict between rule 67 and token KW_NOTE resolved as shift ('<' < KW_NOTE).
    Conflict between rule 67 and token KW_PLUSE resolved as shift ('<' < KW_PLUSE).
    Conflict between rule 67 and token KW_MINUSE resolved as shift ('<' < KW_MINUSE).
    Conflict between rule 67 and token KW_MULTE resolved as shift ('<' < KW_MULTE).
    Conflict between rule 67 and token KW_DIVE resolved as shift ('<' < KW_DIVE).
    Conflict between rule 67 and token KW_MODE resolved as shift ('<' < KW_MODE).
    Conflict between rule 67 and token KW_DE resolved as shift ('<' < KW_DE).
    Conflict between rule 67 and token KW_P resolved as reduce (KW_P < '<').
    Conflict between rule 67 and token '.' resolved as reduce ('.' < '<').
    Conflict between rule 67 and token '+' resolved as reduce ('+' < '<').
    Conflict between rule 67 and token '-' resolved as reduce ('-' < '<').
    Conflict between rule 67 and token '*' resolved as reduce ('*' < '<').
    Conflict between rule 67 and token '/' resolved as reduce ('/' < '<').
    Conflict between rule 67 and token '%' resolved as reduce ('%' < '<').
    Conflict between rule 67 and token '<' resolved as reduce (%left '<').
    Conflict between rule 67 and token '>' resolved as shift ('<' < '>').
    Conflict between rule 67 and token '=' resolved as shift ('<' < '=').


State 135

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   66   | ex '>' ex .  [KW_LESSE, KW_GREATERE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', ':', ';', ',']
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND     shift, and go to state 69
    KW_OR      shift, and go to state 70
    KW_NOT     shift, and go to state 71
    KW_E       shift, and go to state 74
    KW_NOTE    shift, and go to state 75
    KW_PLUSE   shift, and go to state 76
    KW_MINUSE  shift, and go to state 77
    KW_MULTE   shift, and go to state 78
    KW_DIVE    shift, and go to state 79
    KW_MODE    shift, and go to state 80
    KW_DE      shift, and go to state 81
    '='        shift, and go to state 91

    $default  reduce using rule 66 (ex)

    Conflict between rule 66 and token KW_AND resolved as shift ('>' < KW_AND).
    Conflict between rule 66 and token KW_OR resolved as shift ('>' < KW_OR).
    Conflict between rule 66 and token KW_NOT resolved as shift ('>' < KW_NOT).
    Conflict between rule 66 and token KW_LESSE resolved as reduce (KW_LESSE < '>').
    Conflict between rule 66 and token KW_GREATERE resolved as reduce (%left KW_GREATERE).
    Conflict between rule 66 and token KW_E resolved as shift ('>' < KW_E).
    Conflict between rule 66 and token KW_NOTE resolved as shift ('>' < KW_NOTE).
    Conflict between rule 66 and token KW_PLUSE resolved as shift ('>' < KW_PLUSE).
    Conflict between rule 66 and token KW_MINUSE resolved as shift ('>' < KW_MINUSE).
    Conflict between rule 66 and token KW_MULTE resolved as shift ('>' < KW_MULTE).
    Conflict between rule 66 and token KW_DIVE resolved as shift ('>' < KW_DIVE).
    Conflict between rule 66 and token KW_MODE resolved as shift ('>' < KW_MODE).
    Conflict between rule 66 and token KW_DE resolved as shift ('>' < KW_DE).
    Conflict between rule 66 and token KW_P resolved as reduce (KW_P < '>').
    Conflict between rule 66 and token '.' resolved as reduce ('.' < '>').
    Conflict between rule 66 and token '+' resolved as reduce ('+' < '>').
    Conflict between rule 66 and token '-' resolved as reduce ('-' < '>').
    Conflict between rule 66 and token '*' resolved as reduce ('*' < '>').
    Conflict between rule 66 and token '/' resolved as reduce ('/' < '>').
    Conflict between rule 66 and token '%' resolved as reduce ('%' < '>').
    Conflict between rule 66 and token '<' resolved as reduce ('<' < '>').
    Conflict between rule 66 and token '>' resolved as reduce (%left '>').
    Conflict between rule 66 and token '=' resolved as shift ('>' < '=').


State 136

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   61   | ex '=' ex .  [KW_AND, KW_OR, KW_NOT, KW_LESSE, KW_GREATERE, KW_E, KW_NOTE, KW_P, KW_FOR, ']', '.', ')', '+', '-', '*', '/', '%', '<', '>', '=', ':', ';', ',']
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_PLUSE   shift, and go to state 76
    KW_MINUSE  shift, and go to state 77
    KW_MULTE   shift, and go to state 78
    KW_DIVE    shift, and go to state 79
    KW_MODE    shift, and go to state 80
    KW_DE      shift, and go to state 81

    $default  reduce using rule 61 (ex)

    Conflict between rule 61 and token KW_AND resolved as reduce (KW_AND < '=').
    Conflict between rule 61 and token KW_OR resolved as reduce (KW_OR < '=').
    Conflict between rule 61 and token KW_NOT resolved as reduce (KW_NOT < '=').
    Conflict between rule 61 and token KW_LESSE resolved as reduce (KW_LESSE < '=').
    Conflict between rule 61 and token KW_GREATERE resolved as reduce (KW_GREATERE < '=').
    Conflict between rule 61 and token KW_E resolved as reduce (KW_E < '=').
    Conflict between rule 61 and token KW_NOTE resolved as reduce (KW_NOTE < '=').
    Conflict between rule 61 and token KW_PLUSE resolved as shift ('=' < KW_PLUSE).
    Conflict between rule 61 and token KW_MINUSE resolved as shift ('=' < KW_MINUSE).
    Conflict between rule 61 and token KW_MULTE resolved as shift ('=' < KW_MULTE).
    Conflict between rule 61 and token KW_DIVE resolved as shift ('=' < KW_DIVE).
    Conflict between rule 61 and token KW_MODE resolved as shift ('=' < KW_MODE).
    Conflict between rule 61 and token KW_DE resolved as shift ('=' < KW_DE).
    Conflict between rule 61 and token KW_P resolved as reduce (KW_P < '=').
    Conflict between rule 61 and token '.' resolved as reduce ('.' < '=').
    Conflict between rule 61 and token '+' resolved as reduce ('+' < '=').
    Conflict between rule 61 and token '-' resolved as reduce ('-' < '=').
    Conflict between rule 61 and token '*' resolved as reduce ('*' < '=').
    Conflict between rule 61 and token '/' resolved as reduce ('/' < '=').
    Conflict between rule 61 and token '%' resolved as reduce ('%' < '=').
    Conflict between rule 61 and token '<' resolved as reduce ('<' < '=').
    Conflict between rule 61 and token '>' resolved as reduce ('>' < '=').
    Conflict between rule 61 and token '=' resolved as reduce (%left '=').


State 137

   99 types: TK_ID .

    $default  reduce using rule 99 (types)


State 138

   95 types: KW_INTEGER .

    $default  reduce using rule 95 (types)


State 139

   98 types: KW_SCALAR .

    $default  reduce using rule 98 (types)


State 140

   96 types: KW_STR .

    $default  reduce using rule 96 (types)


State 141

   97 types: KW_BOOLEAN .

    $default  reduce using rule 97 (types)


State 142

   91 decl: exList ':' types . ';'

    ';'  shift, and go to state 161


State 143

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex
   94 exList: exList ',' ex .  [')', ':', ',']

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    '.'          shift, and go to state 83
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91

    $default  reduce using rule 94 (exList)


State 144

   33 new_table_from_table: TK_ID KW_DE '[' ex . KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | TK_ID KW_DE '[' ex . KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    KW_FOR       shift, and go to state 162
    '.'          shift, and go to state 83
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91


State 145

   56 ex: TK_ID '[' ex ']' .

    $default  reduce using rule 56 (ex)


State 146

   41 function: TK_ID '(' exList ')' .

    $default  reduce using rule 41 (function)


State 147

   37 if: KW_IF '(' ex ')' . ':' code KW_ENDIF ';'
   38   | KW_IF '(' ex ')' . ':' code KW_ELSE ':' code KW_ENDIF ';'

    ':'  shift, and go to state 163


State 148

   88 parameter: TK_ID . ':' types
   89          | TK_ID . '[' TK_INT ']' ':' types
   90          | TK_ID . '[' ']' ':' types

    '['  shift, and go to state 164
    ':'  shift, and go to state 165


State 149

   22 function: KW_DEF TK_ID '(' ')' . '-' '>' types ':' code KW_ENDDEF
   23         | KW_DEF TK_ID '(' ')' . ':' code KW_ENDDEF
   24         | KW_DEF TK_ID '(' ')' . ':' KW_ENDDEF

    '-'  shift, and go to state 166
    ':'  shift, and go to state 167


State 150

   20 function: KW_DEF TK_ID '(' parameters . ')' '-' '>' types ':' code KW_ENDDEF
   21         | KW_DEF TK_ID '(' parameters . ')' ':' code KW_ENDDEF
   87 parameters: parameters . ',' parameter

    ')'  shift, and go to state 168
    ','  shift, and go to state 169


State 151

   86 parameters: parameter .

    $default  reduce using rule 86 (parameters)


State 152

    4 main: KW_DEF KW_MAIN '(' ')' . ':' code KW_ENDDEF ';'

    ':'  shift, and go to state 170


State 153

    5 code: . instr
    6     | . code instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   29     | KW_COMP TK_ID ':' $@1 . code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    code                  go to state 171
    instr                 go to state 28
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 154

   30 loops: KW_FOR TK_ID KW_IN '[' . TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | KW_FOR TK_ID KW_IN '[' . TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'

    TK_INT  shift, and go to state 172


State 155

   32 loops: KW_WHILE '(' ex ')' . ':' code KW_ENDWHILE ';'

    ':'  shift, and go to state 173


State 156

   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex
   92 decl: KW_CONST TK_ID '=' ex . ':' types ';'

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    '.'          shift, and go to state 83
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91
    ':'          shift, and go to state 174


State 157

   55 ex: '#' TK_ID '[' ']' .

    $default  reduce using rule 55 (ex)


State 158

   54 ex: '#' TK_ID '[' ex . ']'
   59   | ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    ']'          shift, and go to state 175
    '.'          shift, and go to state 83
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91


State 159

   42 function: '#' TK_ID '(' ')' .

    $default  reduce using rule 42 (function)


State 160

   43 function: '#' TK_ID '(' exList . ')'
   94 exList: exList . ',' ex

    ')'  shift, and go to state 176
    ','  shift, and go to state 94


State 161

   91 decl: exList ':' types ';' .

    $default  reduce using rule 91 (decl)


State 162

   33 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR . TK_ID ':' TK_INT ']' ':' types ';'
   34                     | TK_ID KW_DE '[' ex KW_FOR . TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'

    TK_ID  shift, and go to state 177


State 163

    5 code: . instr
    6     | . code instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   37   | KW_IF '(' ex ')' ':' . code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   38   | KW_IF '(' ex ')' ':' . code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    code                  go to state 178
    instr                 go to state 28
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 164

   89 parameter: TK_ID '[' . TK_INT ']' ':' types
   90          | TK_ID '[' . ']' ':' types

    TK_INT  shift, and go to state 179
    ']'     shift, and go to state 180


State 165

   88 parameter: TK_ID ':' . types
   95 types: . KW_INTEGER
   96      | . KW_STR
   97      | . KW_BOOLEAN
   98      | . KW_SCALAR
   99      | . TK_ID

    TK_ID       shift, and go to state 137
    KW_INTEGER  shift, and go to state 138
    KW_SCALAR   shift, and go to state 139
    KW_STR      shift, and go to state 140
    KW_BOOLEAN  shift, and go to state 141

    types  go to state 181


State 166

   22 function: KW_DEF TK_ID '(' ')' '-' . '>' types ':' code KW_ENDDEF

    '>'  shift, and go to state 182


State 167

    5 code: . instr
    6     | . code instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   23         | KW_DEF TK_ID '(' ')' ':' . code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   24         | KW_DEF TK_ID '(' ')' ':' . KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_ENDDEF        shift, and go to state 183
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    code                  go to state 184
    instr                 go to state 28
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 168

   20 function: KW_DEF TK_ID '(' parameters ')' . '-' '>' types ':' code KW_ENDDEF
   21         | KW_DEF TK_ID '(' parameters ')' . ':' code KW_ENDDEF

    '-'  shift, and go to state 185
    ':'  shift, and go to state 186


State 169

   87 parameters: parameters ',' . parameter
   88 parameter: . TK_ID ':' types
   89          | . TK_ID '[' TK_INT ']' ':' types
   90          | . TK_ID '[' ']' ':' types

    TK_ID  shift, and go to state 148

    parameter  go to state 187


State 170

    4 main: KW_DEF KW_MAIN '(' ')' ':' . code KW_ENDDEF ';'
    5 code: . instr
    6     | . code instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    code                  go to state 188
    instr                 go to state 28
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 171

    6 code: code . instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   28 $@2: . %empty  [KW_ENDCOMP]
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   29     | KW_COMP TK_ID ':' $@1 code . $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    $default  reduce using rule 28 ($@2)

    instr                 go to state 68
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    $@2                   go to state 189
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 172

   30 loops: KW_FOR TK_ID KW_IN '[' TK_INT . ':' ex ']' ':' code KW_ENDFOR ';'
   31      | KW_FOR TK_ID KW_IN '[' TK_INT . ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'

    ':'  shift, and go to state 190


State 173

    5 code: . instr
    6     | . code instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   32      | KW_WHILE '(' ex ')' ':' . code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    code                  go to state 191
    instr                 go to state 28
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 174

   92 decl: KW_CONST TK_ID '=' ex ':' . types ';'
   95 types: . KW_INTEGER
   96      | . KW_STR
   97      | . KW_BOOLEAN
   98      | . KW_SCALAR
   99      | . TK_ID

    TK_ID       shift, and go to state 137
    KW_INTEGER  shift, and go to state 138
    KW_SCALAR   shift, and go to state 139
    KW_STR      shift, and go to state 140
    KW_BOOLEAN  shift, and go to state 141

    types  go to state 192


State 175

   54 ex: '#' TK_ID '[' ex ']' .

    $default  reduce using rule 54 (ex)


State 176

   43 function: '#' TK_ID '(' exList ')' .

    $default  reduce using rule 43 (function)


State 177

   33 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID . ':' TK_INT ']' ':' types ';'
   34                     | TK_ID KW_DE '[' ex KW_FOR TK_ID . ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'

    ':'  shift, and go to state 193


State 178

    6 code: code . instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   37   | KW_IF '(' ex ')' ':' code . KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   38   | KW_IF '(' ex ')' ':' code . KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_ELSE          shift, and go to state 194
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_ENDIF         shift, and go to state 195
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    instr                 go to state 68
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 179

   89 parameter: TK_ID '[' TK_INT . ']' ':' types

    ']'  shift, and go to state 196


State 180

   90 parameter: TK_ID '[' ']' . ':' types

    ':'  shift, and go to state 197


State 181

   88 parameter: TK_ID ':' types .

    $default  reduce using rule 88 (parameter)


State 182

   22 function: KW_DEF TK_ID '(' ')' '-' '>' . types ':' code KW_ENDDEF
   95 types: . KW_INTEGER
   96      | . KW_STR
   97      | . KW_BOOLEAN
   98      | . KW_SCALAR
   99      | . TK_ID

    TK_ID       shift, and go to state 137
    KW_INTEGER  shift, and go to state 138
    KW_SCALAR   shift, and go to state 139
    KW_STR      shift, and go to state 140
    KW_BOOLEAN  shift, and go to state 141

    types  go to state 198


State 183

   24 function: KW_DEF TK_ID '(' ')' ':' KW_ENDDEF .

    $default  reduce using rule 24 (function)


State 184

    6 code: code . instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   23         | KW_DEF TK_ID '(' ')' ':' code . KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_ENDDEF        shift, and go to state 199
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    instr                 go to state 68
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 185

   20 function: KW_DEF TK_ID '(' parameters ')' '-' . '>' types ':' code KW_ENDDEF

    '>'  shift, and go to state 200


State 186

    5 code: . instr
    6     | . code instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   21         | KW_DEF TK_ID '(' parameters ')' ':' . code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    code                  go to state 201
    instr                 go to state 28
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 187

   87 parameters: parameters ',' parameter .

    $default  reduce using rule 87 (parameters)


State 188

    4 main: KW_DEF KW_MAIN '(' ')' ':' code . KW_ENDDEF ';'
    6 code: code . instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_ENDDEF        shift, and go to state 202
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    instr                 go to state 68
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 189

   29 comp: KW_COMP TK_ID ':' $@1 code $@2 . KW_ENDCOMP ';'

    KW_ENDCOMP  shift, and go to state 203


State 190

   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   30 loops: KW_FOR TK_ID KW_IN '[' TK_INT ':' . ex ']' ':' code KW_ENDFOR ';'
   31      | KW_FOR TK_ID KW_IN '[' TK_INT ':' . ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function

    TK_ID         shift, and go to state 49
    TK_INT        shift, and go to state 5
    TK_REAL       shift, and go to state 6
    TK_CONSTRING  shift, and go to state 7
    KW_DEF        shift, and go to state 50
    KW_NOT        shift, and go to state 13
    KW_TRUE       shift, and go to state 14
    KW_FALSE      shift, and go to state 15
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    '-'           shift, and go to state 23
    '#'           shift, and go to state 25

    function  go to state 31
    ex        go to state 204


State 191

    6 code: code . instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   32      | KW_WHILE '(' ex ')' ':' code . KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_ENDWHILE      shift, and go to state 205
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    instr                 go to state 68
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 192

   92 decl: KW_CONST TK_ID '=' ex ':' types . ';'

    ';'  shift, and go to state 206


State 193

   33 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' . TK_INT ']' ':' types ';'
   34                     | TK_ID KW_DE '[' ex KW_FOR TK_ID ':' . types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   95 types: . KW_INTEGER
   96      | . KW_STR
   97      | . KW_BOOLEAN
   98      | . KW_SCALAR
   99      | . TK_ID

    TK_ID       shift, and go to state 137
    TK_INT      shift, and go to state 207
    KW_INTEGER  shift, and go to state 138
    KW_SCALAR   shift, and go to state 139
    KW_STR      shift, and go to state 140
    KW_BOOLEAN  shift, and go to state 141

    types  go to state 208


State 194

   38 if: KW_IF '(' ex ')' ':' code KW_ELSE . ':' code KW_ENDIF ';'

    ':'  shift, and go to state 209


State 195

   37 if: KW_IF '(' ex ')' ':' code KW_ENDIF . ';'

    ';'  shift, and go to state 210


State 196

   89 parameter: TK_ID '[' TK_INT ']' . ':' types

    ':'  shift, and go to state 211


State 197

   90 parameter: TK_ID '[' ']' ':' . types
   95 types: . KW_INTEGER
   96      | . KW_STR
   97      | . KW_BOOLEAN
   98      | . KW_SCALAR
   99      | . TK_ID

    TK_ID       shift, and go to state 137
    KW_INTEGER  shift, and go to state 138
    KW_SCALAR   shift, and go to state 139
    KW_STR      shift, and go to state 140
    KW_BOOLEAN  shift, and go to state 141

    types  go to state 212


State 198

   22 function: KW_DEF TK_ID '(' ')' '-' '>' types . ':' code KW_ENDDEF

    ':'  shift, and go to state 213


State 199

   23 function: KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF .

    $default  reduce using rule 23 (function)


State 200

   20 function: KW_DEF TK_ID '(' parameters ')' '-' '>' . types ':' code KW_ENDDEF
   95 types: . KW_INTEGER
   96      | . KW_STR
   97      | . KW_BOOLEAN
   98      | . KW_SCALAR
   99      | . TK_ID

    TK_ID       shift, and go to state 137
    KW_INTEGER  shift, and go to state 138
    KW_SCALAR   shift, and go to state 139
    KW_STR      shift, and go to state 140
    KW_BOOLEAN  shift, and go to state 141

    types  go to state 214


State 201

    6 code: code . instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   21         | KW_DEF TK_ID '(' parameters ')' ':' code . KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_ENDDEF        shift, and go to state 215
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    instr                 go to state 68
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 202

    4 main: KW_DEF KW_MAIN '(' ')' ':' code KW_ENDDEF . ';'

    ';'  shift, and go to state 216


State 203

   29 comp: KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP . ';'

    ';'  shift, and go to state 217


State 204

   30 loops: KW_FOR TK_ID KW_IN '[' TK_INT ':' ex . ']' ':' code KW_ENDFOR ';'
   31      | KW_FOR TK_ID KW_IN '[' TK_INT ':' ex . ':' TK_INT ']' ':' code KW_ENDFOR ';'
   59 ex: ex . '.' ex
   60   | ex . '/' ex
   61   | ex . '=' ex
   62   | ex . '+' ex
   63   | ex . '-' ex
   64   | ex . '*' ex
   65   | ex . '%' ex
   66   | ex . '>' ex
   67   | ex . '<' ex
   68   | ex . KW_E ex
   69   | ex . KW_AND ex
   70   | ex . KW_OR ex
   71   | ex . KW_NOT ex
   72   | ex . KW_LESSE ex
   73   | ex . KW_GREATERE ex
   74   | ex . KW_NOTE ex
   75   | ex . KW_P ex
   77   | ex . KW_PLUSE ex
   78   | ex . KW_MINUSE ex
   79   | ex . KW_DIVE ex
   80   | ex . KW_MULTE ex
   81   | ex . KW_MODE ex
   82   | ex . KW_DE ex

    KW_AND       shift, and go to state 69
    KW_OR        shift, and go to state 70
    KW_NOT       shift, and go to state 71
    KW_LESSE     shift, and go to state 72
    KW_GREATERE  shift, and go to state 73
    KW_E         shift, and go to state 74
    KW_NOTE      shift, and go to state 75
    KW_PLUSE     shift, and go to state 76
    KW_MINUSE    shift, and go to state 77
    KW_MULTE     shift, and go to state 78
    KW_DIVE      shift, and go to state 79
    KW_MODE      shift, and go to state 80
    KW_DE        shift, and go to state 81
    KW_P         shift, and go to state 82
    ']'          shift, and go to state 218
    '.'          shift, and go to state 83
    '+'          shift, and go to state 84
    '-'          shift, and go to state 85
    '*'          shift, and go to state 86
    '/'          shift, and go to state 87
    '%'          shift, and go to state 88
    '<'          shift, and go to state 89
    '>'          shift, and go to state 90
    '='          shift, and go to state 91
    ':'          shift, and go to state 219


State 205

   32 loops: KW_WHILE '(' ex ')' ':' code KW_ENDWHILE . ';'

    ';'  shift, and go to state 220


State 206

   92 decl: KW_CONST TK_ID '=' ex ':' types ';' .

    $default  reduce using rule 92 (decl)


State 207

   33 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT . ']' ':' types ';'

    ']'  shift, and go to state 221


State 208

   34 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types . KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'

    KW_IN  shift, and go to state 222


State 209

    5 code: . instr
    6     | . code instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   38   | KW_IF '(' ex ')' ':' code KW_ELSE ':' . code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    code                  go to state 223
    instr                 go to state 28
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 210

   37 if: KW_IF '(' ex ')' ':' code KW_ENDIF ';' .

    $default  reduce using rule 37 (if)


State 211

   89 parameter: TK_ID '[' TK_INT ']' ':' . types
   95 types: . KW_INTEGER
   96      | . KW_STR
   97      | . KW_BOOLEAN
   98      | . KW_SCALAR
   99      | . TK_ID

    TK_ID       shift, and go to state 137
    KW_INTEGER  shift, and go to state 138
    KW_SCALAR   shift, and go to state 139
    KW_STR      shift, and go to state 140
    KW_BOOLEAN  shift, and go to state 141

    types  go to state 224


State 212

   90 parameter: TK_ID '[' ']' ':' types .

    $default  reduce using rule 90 (parameter)


State 213

    5 code: . instr
    6     | . code instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   22         | KW_DEF TK_ID '(' ')' '-' '>' types ':' . code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    code                  go to state 225
    instr                 go to state 28
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 214

   20 function: KW_DEF TK_ID '(' parameters ')' '-' '>' types . ':' code KW_ENDDEF

    ':'  shift, and go to state 226


State 215

   21 function: KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF .

    $default  reduce using rule 21 (function)


State 216

    4 main: KW_DEF KW_MAIN '(' ')' ':' code KW_ENDDEF ';' .

    $default  reduce using rule 4 (main)


State 217

   29 comp: KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';' .

    $default  reduce using rule 29 (comp)


State 218

   30 loops: KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' . ':' code KW_ENDFOR ';'

    ':'  shift, and go to state 227


State 219

   31 loops: KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' . TK_INT ']' ':' code KW_ENDFOR ';'

    TK_INT  shift, and go to state 228


State 220

   32 loops: KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';' .

    $default  reduce using rule 32 (loops)


State 221

   33 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' . ':' types ';'

    ':'  shift, and go to state 229


State 222

   34 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN . TK_ID KW_OF TK_INT ']' ':' types ';'

    TK_ID  shift, and go to state 230


State 223

    6 code: code . instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   38   | KW_IF '(' ex ')' ':' code KW_ELSE ':' code . KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_ENDIF         shift, and go to state 231
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    instr                 go to state 68
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 224

   89 parameter: TK_ID '[' TK_INT ']' ':' types .

    $default  reduce using rule 89 (parameter)


State 225

    6 code: code . instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   22         | KW_DEF TK_ID '(' ')' '-' '>' types ':' code . KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_ENDDEF        shift, and go to state 232
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    instr                 go to state 68
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 226

    5 code: . instr
    6     | . code instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   20         | KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' . code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    code                  go to state 233
    instr                 go to state 28
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 227

    5 code: . instr
    6     | . code instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   30      | KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' . code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    code                  go to state 234
    instr                 go to state 28
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 228

   31 loops: KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT . ']' ':' code KW_ENDFOR ';'

    ']'  shift, and go to state 235


State 229

   33 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' . types ';'
   95 types: . KW_INTEGER
   96      | . KW_STR
   97      | . KW_BOOLEAN
   98      | . KW_SCALAR
   99      | . TK_ID

    TK_ID       shift, and go to state 137
    KW_INTEGER  shift, and go to state 138
    KW_SCALAR   shift, and go to state 139
    KW_STR      shift, and go to state 140
    KW_BOOLEAN  shift, and go to state 141

    types  go to state 236


State 230

   34 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID . KW_OF TK_INT ']' ':' types ';'

    KW_OF  shift, and go to state 237


State 231

   38 if: KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF . ';'

    ';'  shift, and go to state 238


State 232

   22 function: KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF .

    $default  reduce using rule 22 (function)


State 233

    6 code: code . instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   20         | KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code . KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_ENDDEF        shift, and go to state 239
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    instr                 go to state 68
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 234

    6 code: code . instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   30      | KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code . KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_ENDFOR        shift, and go to state 240
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    instr                 go to state 68
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 235

   31 loops: KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' . ':' code KW_ENDFOR ';'

    ':'  shift, and go to state 241


State 236

   33 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types . ';'

    ';'  shift, and go to state 242


State 237

   34 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF . TK_INT ']' ':' types ';'

    TK_INT  shift, and go to state 243


State 238

   38 if: KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';' .

    $default  reduce using rule 38 (if)


State 239

   20 function: KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF .

    $default  reduce using rule 20 (function)


State 240

   30 loops: KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR . ';'

    ';'  shift, and go to state 244


State 241

    5 code: . instr
    6     | . code instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   31      | KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' . code KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    code                  go to state 245
    instr                 go to state 28
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 242

   33 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';' .

    $default  reduce using rule 33 (new_table_from_table)


State 243

   34 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT . ']' ':' types ';'

    ']'  shift, and go to state 246


State 244

   30 loops: KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';' .

    $default  reduce using rule 30 (loops)


State 245

    6 code: code . instr
    7 instr: . ex_instr
    8      | . break
    9      | . decl
   10      | . return
   11      | . if
   12      | . comp
   13      | . loops
   14      | . continue
   15      | . empty
   16      | . new_table_from_table
   17      | . comments
   18 comments: . TK_LINECOMMENTS
   19 ex_instr: . ex ';'
   20 function: . KW_DEF TK_ID '(' parameters ')' '-' '>' types ':' code KW_ENDDEF
   21         | . KW_DEF TK_ID '(' parameters ')' ':' code KW_ENDDEF
   22         | . KW_DEF TK_ID '(' ')' '-' '>' types ':' code KW_ENDDEF
   23         | . KW_DEF TK_ID '(' ')' ':' code KW_ENDDEF
   24         | . KW_DEF TK_ID '(' ')' ':' KW_ENDDEF
   25 empty: . ';'
   26 continue: . KW_CONTINUE ';'
   29 comp: . KW_COMP TK_ID ':' $@1 code $@2 KW_ENDCOMP ';'
   30 loops: . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ']' ':' code KW_ENDFOR ';'
   31      | . KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';'
   31      | KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code . KW_ENDFOR ';'
   32      | . KW_WHILE '(' ex ')' ':' code KW_ENDWHILE ';'
   33 new_table_from_table: . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' TK_INT ']' ':' types ';'
   34                     | . TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';'
   35 return: . KW_RETURN ';'
   36       | . KW_RETURN ex ';'
   37 if: . KW_IF '(' ex ')' ':' code KW_ENDIF ';'
   38   | . KW_IF '(' ex ')' ':' code KW_ELSE ':' code KW_ENDIF ';'
   39 break: . KW_BREAK ';'
   40 function: . TK_ID '(' ')'
   41         | . TK_ID '(' exList ')'
   42         | . '#' TK_ID '(' ')'
   43         | . '#' TK_ID '(' exList ')'
   44 ex: . TK_INT
   45   | . '-' TK_INT
   46   | . TK_REAL
   47   | . '-' TK_REAL
   48   | . KW_TRUE
   49   | . KW_FALSE
   50   | . TK_ID
   51   | . '-' TK_ID
   52   | . '#' TK_ID
   53   | . '-' '#' TK_ID
   54   | . '#' TK_ID '[' ex ']'
   55   | . '#' TK_ID '[' ']'
   56   | . TK_ID '[' ex ']'
   57   | . TK_ID '[' ']'
   58   | . TK_CONSTRING
   59   | . ex '.' ex
   60   | . ex '/' ex
   61   | . ex '=' ex
   62   | . ex '+' ex
   63   | . ex '-' ex
   64   | . ex '*' ex
   65   | . ex '%' ex
   66   | . ex '>' ex
   67   | . ex '<' ex
   68   | . ex KW_E ex
   69   | . ex KW_AND ex
   70   | . ex KW_OR ex
   71   | . ex KW_NOT ex
   72   | . ex KW_LESSE ex
   73   | . ex KW_GREATERE ex
   74   | . ex KW_NOTE ex
   75   | . ex KW_P ex
   76   | . KW_NOT ex
   77   | . ex KW_PLUSE ex
   78   | . ex KW_MINUSE ex
   79   | . ex KW_DIVE ex
   80   | . ex KW_MULTE ex
   81   | . ex KW_MODE ex
   82   | . ex KW_DE ex
   83   | . '[' ex ']'
   84   | . '(' ex ')'
   85   | . function
   91 decl: . exList ':' types ';'
   92     | . KW_CONST TK_ID '=' ex ':' types ';'
   93 exList: . ex
   94       | . exList ',' ex

    TK_ID            shift, and go to state 4
    TK_INT           shift, and go to state 5
    TK_REAL          shift, and go to state 6
    TK_CONSTRING     shift, and go to state 7
    TK_LINECOMMENTS  shift, and go to state 8
    KW_IF            shift, and go to state 9
    KW_DEF           shift, and go to state 50
    KW_RETURN        shift, and go to state 11
    KW_COMP          shift, and go to state 12
    KW_NOT           shift, and go to state 13
    KW_TRUE          shift, and go to state 14
    KW_FALSE         shift, and go to state 15
    KW_FOR           shift, and go to state 16
    KW_ENDFOR        shift, and go to state 247
    KW_WHILE         shift, and go to state 17
    KW_BREAK         shift, and go to state 18
    KW_CONTINUE      shift, and go to state 19
    KW_CONST         shift, and go to state 20
    '['              shift, and go to state 21
    '('              shift, and go to state 22
    '-'              shift, and go to state 23
    ';'              shift, and go to state 24
    '#'              shift, and go to state 25

    instr                 go to state 68
    comments              go to state 29
    ex_instr              go to state 30
    function              go to state 31
    empty                 go to state 32
    continue              go to state 33
    comp                  go to state 34
    loops                 go to state 35
    new_table_from_table  go to state 36
    return                go to state 37
    if                    go to state 38
    break                 go to state 39
    ex                    go to state 40
    decl                  go to state 41
    exList                go to state 42


State 246

   34 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' . ':' types ';'

    ':'  shift, and go to state 248


State 247

   31 loops: KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR . ';'

    ';'  shift, and go to state 249


State 248

   34 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' . types ';'
   95 types: . KW_INTEGER
   96      | . KW_STR
   97      | . KW_BOOLEAN
   98      | . KW_SCALAR
   99      | . TK_ID

    TK_ID       shift, and go to state 137
    KW_INTEGER  shift, and go to state 138
    KW_SCALAR   shift, and go to state 139
    KW_STR      shift, and go to state 140
    KW_BOOLEAN  shift, and go to state 141

    types  go to state 250


State 249

   31 loops: KW_FOR TK_ID KW_IN '[' TK_INT ':' ex ':' TK_INT ']' ':' code KW_ENDFOR ';' .

    $default  reduce using rule 31 (loops)


State 250

   34 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types . ';'

    ';'  shift, and go to state 251


State 251

   34 new_table_from_table: TK_ID KW_DE '[' ex KW_FOR TK_ID ':' types KW_IN TK_ID KW_OF TK_INT ']' ':' types ';' .

    $default  reduce using rule 34 (new_table_from_table)
